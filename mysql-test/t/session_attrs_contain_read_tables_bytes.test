--source include/have_debug.inc

-- echo
-- echo # Test read_tables and write_tables query response attributes
-- echo
connection default;

### Setup
use test;
create table tab1 (c1 int PRIMARY KEY, c2 int unsigned);
create table tab2 (c1 int PRIMARY KEY, c2 int unsigned);
create table tab3 (c1 int PRIMARY KEY, c2 int unsigned);
create view view1 as select tab1.c1, tab2.c2 from tab1, tab2;
create view view2 as select * from tab1 union select * from tab2;

--echo # Test 1: session level variables are default, i.e. 0
--echo   Expected read=<empty>, write=<empty>
set @@session.response_attrs_contain_read_tables_bytes = default;
set @@session.response_attrs_contain_write_tables_bytes = default;

select * from tab1;
let $attr = get_response_attribute(read_tables);
echo [^] Read tables in query response attributes: $attr;

--echo # set session level variables to 1KB
set @@session.response_attrs_contain_read_tables_bytes = 1024;
set @@session.response_attrs_contain_write_tables_bytes = 1024;

--echo # Test 2: read from a join
--echo   Expected read=tab1,tab2, write=<empty>

select * from tab1, tab2;

let $attr = get_response_attribute(read_tables);
echo [^] Read tables in query response attributes: $attr;

--echo # Test 3: no tables in the query
--echo   Expected read=<empty>, write=<empty>

select 'no tables in this query' alias;

let $attr = get_response_attribute(read_tables);
echo [^] Read tables in query response attributes: $attr;

--echo # Test 4: read from a join view
--echo   Expected read=tab1,tab2, write=<empty>

select * from view1;

let $attr = get_response_attribute(read_tables);
echo [^] Read tables in query response attributes: $attr;

--echo # Test 5: read from a union view
--echo   Expected read=tab1,tab2, write=<empty>

select * from view2;

let $attr = get_response_attribute(read_tables);
echo [^] Read tables in query response attributes: $attr;

--echo # Test 6: insert-select with the same table
--echo   Expected read=tab1, write=tab1
insert into tab1 select * from tab1;

let $attr = get_response_attribute(read_tables);
echo [^] Read tables in query response attributes: $attr;
let $w_attr = get_response_attribute(write_tables);
echo [^] Write tables in query response attributes: $w_attr;

--echo # Test 7: insert-select with different tables
--echo   Expected read=tab1, write=tab2
insert into tab2 select * from tab1;

let $attr = get_response_attribute(read_tables);
echo [^] Read tables in query response attributes: $attr;
let $w_attr = get_response_attribute(write_tables);
echo [^] Write tables in query response attributes: $w_attr;

--echo # Test 8: replace-select with different tables
--echo   Expected read=tab1, write=tab2
replace into tab2 select * from tab1;

let $attr = get_response_attribute(read_tables);
echo [^] Read tables in query response attributes: $attr;
let $w_attr = get_response_attribute(write_tables);
echo [^] Write tables in query response attributes: $w_attr;

--echo # Test 9: insert-values
--echo   Expected read=<empty>, write=tab1
insert into tab1 values(1, 1);

let $attr = get_response_attribute(read_tables);
echo [^] Read tables in query response attributes: $attr;
let $w_attr = get_response_attribute(write_tables);
echo [^] Write tables in query response attributes: $w_attr;

--echo # Test 10: replace-values
--echo   Expected read=<empty>, write=tab1
replace into tab1 values(1, 1);

let $attr = get_response_attribute(read_tables);
echo [^] Read tables in query response attributes: $attr;
let $w_attr = get_response_attribute(write_tables);
echo [^] Write tables in query response attributes: $w_attr;

--echo # Test 11: single table delete
--echo   Expected write=tab1
DELETE FROM tab1
WHERE
    tab1.c1 > 1;

let $attr = get_response_attribute(read_tables);
echo [^] Read tables in query response attributes: $attr;
let $w_attr = get_response_attribute(write_tables);
echo [^] Write tables in query response attributes: $w_attr;

--echo # Test 12: single table delete with sub-query
--echo   Expected read=tab3, write=tab2
DELETE FROM tab1
WHERE
    tab1.c1 in (select c1 from tab3);

let $attr = get_response_attribute(read_tables);
echo [^] Read tables in query response attributes: $attr;
let $w_attr = get_response_attribute(write_tables);
echo [^] Write tables in query response attributes: $w_attr;

--echo # Test 13: multi-table delete
--echo   Expected read=<empty>, write=tab1,tab2
DELETE tab1,tab2 FROM tab1
        INNER JOIN
    tab2 ON tab2.c2 = tab1.c2 
WHERE
    tab1.c1 > 1;

let $attr = get_response_attribute(read_tables);
echo [^] Read tables in query response attributes: $attr;
let $w_attr = get_response_attribute(write_tables);
echo [^] Write tables in query response attributes: $w_attr;

--echo # Test 14: multi-table delete with sub-query
--echo   Expected read=tab3, write=tab1,tab2
DELETE tab1,tab2 FROM tab1
        INNER JOIN
    tab2 ON tab2.c2 = tab1.c2 
WHERE
    tab1.c1 in (select c1 from tab3);

let $attr = get_response_attribute(read_tables);
echo [^] Read tables in query response attributes: $attr;
let $w_attr = get_response_attribute(write_tables);
echo [^] Write tables in query response attributes: $w_attr;

--echo # Test 15: single table update
--echo   Expected read=<empty>, write=tab1
UPDATE tab1
 SET tab1.c1=1
WHERE tab1.c1>2;

let $attr = get_response_attribute(read_tables);
echo [^] Read tables in query response attributes: $attr;
let $w_attr = get_response_attribute(write_tables);
echo [^] Write tables in query response attributes: $w_attr;

--echo # Test 16: single table update with sub-query
--echo   Expected read=tab3, write=tab1
UPDATE tab1
 SET tab1.c1=1
WHERE tab1.c1 in (select c1 from tab3);

let $attr = get_response_attribute(read_tables);
echo [^] Read tables in query response attributes: $attr;
let $w_attr = get_response_attribute(write_tables);
echo [^] Write tables in query response attributes: $w_attr;

--echo # Test 17: multi-table update
--echo   Expected read=<empty>, write=tab1,tab2
UPDATE tab1, tab2
 SET tab1.c1=1, tab2.c1=2
WHERE tab1.c1>2 AND tab2.c1 > 1;

let $attr = get_response_attribute(read_tables);
echo [^] Read tables in query response attributes: $attr;
let $w_attr = get_response_attribute(write_tables);
echo [^] Write tables in query response attributes: $w_attr;

--echo # Test 18: multi-table update with sub-query
--echo   Expected read=tab3, write=tab1,tab2
UPDATE tab1, tab2
 SET tab1.c1=1, tab2.c1=2
WHERE tab1.c1>2 AND tab2.c1 in (select c1 from tab3);

let $attr = get_response_attribute(read_tables);
echo [^] Read tables in query response attributes: $attr;
let $w_attr = get_response_attribute(write_tables);
echo [^] Write tables in query response attributes: $w_attr;

--echo # Test 19: LOAD into table
--echo   Expected read=<empty> write=tab1

disable_query_log;
eval SELECT * INTO OUTFILE '$MYSQLTEST_VARDIR/tmp/tab1' from tab1;
delete from tab1;
eval load data infile '$MYSQLTEST_VARDIR/tmp/tab1' into table tab1;
enable_query_log;
remove_file $MYSQLTEST_VARDIR/tmp/tab1;

let $attr = get_response_attribute(read_tables);
echo [^] Read tables in query response attributes: $attr;
let $w_attr = get_response_attribute(write_tables);
echo [^] Write tables in query response attributes: $w_attr;

--echo # Test 20: multi-query
--echo   Expected read=tab2 write=<empty>
--echo   Shows the tables from the last query
--echo   (the session tracker is reset between queries)

delimiter |||;

select * from tab1;
select * from tab2;
|||

# reset delimiter
delimiter ;|||

let $attr = get_response_attribute(read_tables);
echo [^] Read tables in query response attributes: $attr;

--echo # Test 21: SELECT with duplicate table names
--echo   Expected read=tab1,tab2,tab3 write=<empty>
--echo   show unique table names
select * from tab1 t11, tab2 t21, tab1 t12, tab2 t22, tab3, tab2 t23;

let $attr = get_response_attribute(read_tables);
echo [^] Read tables in query response attributes: $attr;

--echo # Test 22: SELECT with a very long table
--echo   Expected read=tab1,... write=<empty>
--echo   the long table name is ommited
create table averyveryveryveryveryveryverylongtablename
  (c1 int PRIMARY KEY, c2 int unsigned);

set @@session.response_attrs_contain_read_tables_bytes = 20;

select * from tab1, averyveryveryveryveryveryverylongtablename;

let $attr = get_response_attribute(read_tables);
echo [^] Read tables in query response attributes: $attr;
let $w_attr = get_response_attribute(write_tables);
echo [^] Write tables in query response attributes: $w_attr;

####################################################
### Clean Up
####################################################

# Reset to default
set @@session.response_attrs_contain_read_tables_bytes = default;

# Cleanup
connection default;
use test;
drop table tab1;
drop table tab2;
drop table tab3;
drop table averyveryveryveryveryveryverylongtablename;
drop view  view1;
drop view  view2;
