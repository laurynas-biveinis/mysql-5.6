##
## Using the system variable high_priority_ddl"
##
connection default
create user test_user1@localhost;
grant all on test to test_user1@localhost;
create user test_user2@localhost;
grant all on test to test_user2@localhost;
##
## killing conflicting shared locks by alter table
##

## Test parameters:
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = alter table t1 modify i bigint;
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 read;;
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int	YES		NULL	
connection: default (for show locks);
# check metadata_locks
SELECT (COUNT(*) > 0) AS should_be_non_zero
FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> "";
should_be_non_zero
1
connection: default (for show processlist)
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
#	test_user1	#	test	#	#	#	#
Warnings:
connection: default
alter table t1 modify i bigint;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: default
eval alter table t1 modify i bigint;
alter table t1 modify i bigint;;
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show locks)
# check metadata_locks
SELECT COUNT(*) as should_be_zero FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> ""
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
Warnings:
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## killing conflicting shared lock in a transaction
## transaction will rollback
##

## Test parameters:
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = alter table t1 rename t1_new;
## blocking_sql      = begin; insert into t1 values (4); select i from t1;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
insert into t1 values (1), (2), (3);
connection: con1
begin; insert into t1 values (4); select i from t1;;
i
1
2
3
4
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int	YES		NULL	
connection: default (for show locks);
# check metadata_locks
SELECT (COUNT(*) > 0) AS should_be_non_zero
FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> "";
should_be_non_zero
1
connection: default (for show processlist)
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
#	test_user1	#	test	#	#	#	#
Warnings:
connection: default
alter table t1 rename t1_new;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: default
eval alter table t1 rename t1_new;
alter table t1 rename t1_new;;
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show locks)
# check metadata_locks
SELECT COUNT(*) as should_be_zero FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> ""
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
Warnings:
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
select * from t1_new;
i
1
2
3
drop table t1_new;
##
## rename table, rename table doesn't support high_priority keyword
##

## Test parameters:
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = rename table t1 to t1_new;
## blocking_sql      = begin; insert into t1 values (5); select i from t1;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
insert into t1 values (1), (2), (3);
connection: con1
begin; insert into t1 values (5); select i from t1;;
i
1
2
3
5
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int	YES		NULL	
connection: default (for show locks);
# check metadata_locks
SELECT (COUNT(*) > 0) AS should_be_non_zero
FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> "";
should_be_non_zero
1
connection: default (for show processlist)
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
#	test_user1	#	test	#	#	#	#
Warnings:
connection: default
rename table t1 to t1_new;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: default
eval rename table t1 to t1_new;
rename table t1 to t1_new;;
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show locks)
# check metadata_locks
SELECT COUNT(*) as should_be_zero FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> ""
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
Warnings:
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
select * from t1_new;
i
1
2
3
drop table t1_new;
##
## simulate conflicting DDL which will not be killed
##

## Test parameters:
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = drop table t1;
## blocking_sql      = lock tables t1 write;
## should_kill       = 0
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 write;;
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int	YES		NULL	
connection: default (for show locks);
# check metadata_locks
SELECT (COUNT(*) > 0) AS should_be_non_zero
FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> "";
should_be_non_zero
1
connection: default (for show processlist)
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
#	test_user1	#	test	#	#	#	#
Warnings:
connection: default
drop table t1;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: default
drop table t1;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show locks)
# check metadata_locks
SELECT COUNT(*) as should_be_zero FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> ""
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
#	test_user1	#	test	#	#	#	#
Warnings:
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## killing conflicting transaction by drop table DDL
##

## Test parameters:
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = drop table t1;
## blocking_sql      = lock tables t1 read; begin; insert into t1 values (4);
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 read; begin; insert into t1 values (4);;
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int	YES		NULL	
connection: default (for show locks);
# check metadata_locks
SELECT (COUNT(*) > 0) AS should_be_non_zero
FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> "";
should_be_non_zero
1
connection: default (for show processlist)
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
#	test_user1	#	test	#	#	#	#
Warnings:
connection: default
drop table t1;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: default
eval drop table t1;
drop table t1;;
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show locks)
# check metadata_locks
SELECT COUNT(*) as should_be_zero FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> ""
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
Warnings:
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## no effect for regular users
##

## Test parameters:
## con_init          = default
## con_block         = con1
## con_kill          = con2
## con_status        = default
## cmd               = alter table t1 modify i bigint
## blocking_sql      = lock tables t1 read
## should_kill       = 0
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 read;
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int	YES		NULL	
connection: default (for show locks);
# check metadata_locks
SELECT (COUNT(*) > 0) AS should_be_non_zero
FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> "";
should_be_non_zero
1
connection: default (for show processlist)
# both con1 and con2 exist
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
#	test_user1	#	test	#	#	#	#
#	test_user2	#	test	#	#	#	#
Warnings:
connection: con2
alter table t1 modify i bigint;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: con2
alter table t1 modify i bigint;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
connection: con2 (for reset variable)
set high_priority_ddl = 0;
connection: default (for show locks)
# check metadata_locks
SELECT COUNT(*) as should_be_zero FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> ""
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
#	test_user1	#	test	#	#	#	#
#	test_user2	#	test	#	#	#	#
Warnings:
connection: con2
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## create index
##

## Test parameters:
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = create index idx1 on t1 (i);
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 read;;
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int	YES		NULL	
connection: default (for show locks);
# check metadata_locks
SELECT (COUNT(*) > 0) AS should_be_non_zero
FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> "";
should_be_non_zero
1
connection: default (for show processlist)
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
#	test_user1	#	test	#	#	#	#
Warnings:
connection: default
create index idx1 on t1 (i);;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: default
eval create index idx1 on t1 (i);
create index idx1 on t1 (i);;
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show locks)
# check metadata_locks
SELECT COUNT(*) as should_be_zero FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> ""
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
Warnings:
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## drop index (use the previously created table)
##

## Test parameters:
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = drop index idx1 on t1;
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 0
## throw_error       = 1

connection default
connection: con1
lock tables t1 read;;
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int	YES	MUL	NULL	
connection: default (for show locks);
# check metadata_locks
SELECT (COUNT(*) > 0) AS should_be_non_zero
FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> "";
should_be_non_zero
1
connection: default (for show processlist)
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
#	test_user1	#	test	#	#	#	#
Warnings:
connection: default
drop index idx1 on t1;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: default
eval drop index idx1 on t1;
drop index idx1 on t1;;
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show locks)
# check metadata_locks
SELECT COUNT(*) as should_be_zero FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> ""
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
Warnings:
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## high_priority truncate table
##

## Test parameters:
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = truncate t1
## blocking_sql      = lock tables t1 read
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 read;
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int	YES		NULL	
connection: default (for show locks);
# check metadata_locks
SELECT (COUNT(*) > 0) AS should_be_non_zero
FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> "";
should_be_non_zero
1
connection: default (for show processlist)
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
#	test_user1	#	test	#	#	#	#
Warnings:
connection: default
truncate t1;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: default
eval truncate t1
truncate t1;
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show locks)
# check metadata_locks
SELECT COUNT(*) as should_be_zero FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> ""
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
Warnings:
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## high_priority create trigger
##

## Test parameters:
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = create trigger ins_sum before insert on t1
for each row set @sum = @sum + new.i
## blocking_sql      = lock tables t1 read
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 read;
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int	YES		NULL	
connection: default (for show locks);
# check metadata_locks
SELECT (COUNT(*) > 0) AS should_be_non_zero
FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> "";
should_be_non_zero
1
connection: default (for show processlist)
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
#	test_user1	#	test	#	#	#	#
Warnings:
connection: default
create trigger ins_sum before insert on t1
for each row set @sum = @sum + new.i;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: default
eval create trigger ins_sum before insert on t1
for each row set @sum = @sum + new.i
create trigger ins_sum before insert on t1
for each row set @sum = @sum + new.i;
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show locks)
# check metadata_locks
SELECT COUNT(*) as should_be_zero FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> ""
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
Warnings:
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## high_priority drop trigger
##

## Test parameters:
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = drop trigger ins_sum
## blocking_sql      = lock tables t1 read
## should_kill       = 1
## recreate_table    = 0
## throw_error       = 1

connection default
connection: con1
lock tables t1 read;
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int	YES		NULL	
connection: default (for show locks);
# check metadata_locks
SELECT (COUNT(*) > 0) AS should_be_non_zero
FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> "";
should_be_non_zero
1
connection: default (for show processlist)
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
#	test_user1	#	test	#	#	#	#
Warnings:
connection: default
drop trigger ins_sum;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: default
eval drop trigger ins_sum
drop trigger ins_sum;
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show locks)
# check metadata_locks
SELECT COUNT(*) as should_be_zero FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> ""
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
Warnings:
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## drop database 
##
create database menagerie;
use menagerie;
create table t1(a int);
connection default
grant all on t1 to test_user1@localhost;
grant all on t1 to test_user2@localhost;

## Test parameters:
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = drop database menagerie;
## blocking_sql      = begin;use menagerie; select * from t1;
## should_kill       = 1
## recreate_table    = 0
## throw_error       = 1

connection default
connection: con1
begin;use menagerie; select * from t1;;
a
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
a	int	YES		NULL	
connection: default (for show locks);
# check metadata_locks
SELECT (COUNT(*) > 0) AS should_be_non_zero
FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> "";
should_be_non_zero
0
connection: default (for show processlist)
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	menagerie	#	#	#	#
#	test_user1	#	menagerie	#	#	#	#
Warnings:
connection: default
drop database menagerie;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on schema metadata: menagerie
set high_priority_ddl = 1;
connection: default
eval drop database menagerie;
drop database menagerie;;
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show locks)
# check metadata_locks
SELECT COUNT(*) as should_be_zero FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> ""
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	NULL	#	#	#	#
Warnings:
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
use test;
##
## high_priority optimize table
##
## "optimize table" doesn't throw errors. It catches all errors, and
## returns a result set in a table
##

## Test parameters:
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = optimize table t1
## blocking_sql      = lock tables t1 read
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 0

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 read;
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int	YES		NULL	
connection: default (for show locks);
# check metadata_locks
SELECT (COUNT(*) > 0) AS should_be_non_zero
FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> "";
should_be_non_zero
1
connection: default (for show processlist)
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
#	test_user1	#	test	#	#	#	#
Warnings:
connection: default
optimize table t1;
Table	Op	Msg_type	Msg_text
test.t1	optimize	Error	Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
test.t1	optimize	status	Operation failed
set high_priority_ddl = 1;
connection: default
eval optimize table t1
optimize table t1;
Table	Op	Msg_type	Msg_text
test.t1	optimize	note	Table does not support optimize, doing recreate + analyze instead
test.t1	optimize	status	OK
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show locks)
# check metadata_locks
SELECT COUNT(*) as should_be_zero FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> ""
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
Warnings:
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## lock table read vs write
##

## Test parameters:
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = lock tables t1 write
## blocking_sql      = lock tables t1 read
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 read;
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int	YES		NULL	
connection: default (for show locks);
# check metadata_locks
SELECT (COUNT(*) > 0) AS should_be_non_zero
FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> "";
should_be_non_zero
1
connection: default (for show processlist)
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
#	test_user1	#	test	#	#	#	#
Warnings:
connection: default
lock tables t1 write;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: default
eval lock tables t1 write
lock tables t1 write;
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show locks)
# check metadata_locks
SELECT COUNT(*) as should_be_zero FROM performance_schema.metadata_locks
WHERE object_schema = "test" AND source <> ""
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info
#	1287	#
#	event_scheduler	#	NULL	#	#	#	#
#	root	#	test	#	#	#	#
Warnings:
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## clean up
##
connection default
unlock tables;
drop user test_user1@localhost;
drop user test_user2@localhost;
drop table if exists t1_new;
Warnings:
Note	1051	Unknown table 'test.t1_new'
drop table t1;
