
# Test server_cpu query response attribute

use test;
create table mytbl (c1 char(8) PRIMARY KEY, c2 int);
SET @@session.session_track_response_attributes = on;
# Test 1: session level variable is default, i.e. 0
There should be no warnings present in the response
set @@session.response_attrs_contain_warnings_bytes = default;
explain select * from mytbl;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	mytbl	NULL	ALL	NULL	NULL	NULL	NULL	1	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`mytbl`.`c1` AS `c1`,`test`.`mytbl`.`c2` AS `c2` from `test`.`mytbl`
[X] Did not find warnings in query response attributes
# Test 2: session level variable is 1 MB
There should be two warnings present in the response
set @@session.response_attrs_contain_warnings_bytes = 1048576;
explain select * from mytbl;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	mytbl	NULL	ALL	NULL	NULL	NULL	NULL	1	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`mytbl`.`c1` AS `c1`,`test`.`mytbl`.`c2` AS `c2` from `test`.`mytbl`
[^] Warnings in query response attributes: (1003,/* select#1 */ select `test`.`mytbl`.`c1` AS `c1`,`test`.`mytbl`.`c2` AS `c2` from `test`.`mytbl`)
# Test 5: session level variable is 5 bytes
Warnings should be truncated to just message codes in the
response since they exceed the bytes limit
set @@session.response_attrs_contain_warnings_bytes = 5;
explain select * from mytbl;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	mytbl	NULL	ALL	NULL	NULL	NULL	NULL	1	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`mytbl`.`c1` AS `c1`,`test`.`mytbl`.`c2` AS `c2` from `test`.`mytbl`
[^] Warnings in query response attributes: (1003,)
# Test 6: session level variable is 0, i.e., disabled
There should be no warnings present in the response
set @@session.response_attrs_contain_warnings_bytes = 0;
explain select * from mytbl;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	mytbl	NULL	ALL	NULL	NULL	NULL	NULL	1	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`mytbl`.`c1` AS `c1`,`test`.`mytbl`.`c2` AS `c2` from `test`.`mytbl`
[X] Did not find warnings in query response attributes
Set variables to raise an additional warning for long running queries
set @@GLOBAL.write_cpu_limit_milliseconds=1;
set @@GLOBAL.write_abort_level=NOTE;
set @@GLOBAL.write_time_check_batch=3;
set @@global.debug= '+d,dbug.force_long_running_query';
# Test 7: session level variable is default, i.e. 0
There should be no warnings present in the response
set @@session.response_attrs_contain_warnings_bytes = default;
insert into mytbl values('a1a1', -1), ('a2a2', -1), ('a3a3', -1);
Warnings:
Note	50091	Write CPU time exceeded (controlled by write_cpu_limit_milliseconds)
[X] Did not find warnings in query response attributes
# Test 8: session level variable is 1 MB
There should be two warnings present in the response
set @@session.response_attrs_contain_warnings_bytes = 1048576;
insert into mytbl values('b1b1', -1), ('b2b2', -1), ('b3b3', -1);
Warnings:
Note	50091	Write CPU time exceeded (controlled by write_cpu_limit_milliseconds)
[^] Warnings in query response attributes: (50091,Write CPU time exceeded (controlled by write_cpu_limit_milliseconds))
# Test 9: session level variable is 5 bytes
Warnings should be truncated to just message codes in the
response since they exceed the bytes limit
set @@session.response_attrs_contain_warnings_bytes = 5;
insert into mytbl values('c1c1', -1), ('c2c2', -1), ('c3c3', -1);
Warnings:
Note	50091	Write CPU time exceeded (controlled by write_cpu_limit_milliseconds)
[^] Warnings in query response attributes: (50091,)
# Test 10: session level variable is 0, i.e., disabled
There should be no warnings present in the response
set @@session.response_attrs_contain_warnings_bytes = 0;
insert into mytbl values('d1d1', -1), ('d2d2', -1), ('d3d3', -1);
Warnings:
Note	50091	Write CPU time exceeded (controlled by write_cpu_limit_milliseconds)
[X] Did not find warnings in query response attributes
set @@global.debug= '-d,dbug.force_long_running_query';
set @@GLOBAL.write_abort_level=OFF;
set @@GLOBAL.write_cpu_limit_milliseconds=0;
set @@GLOBAL.write_time_check_batch=0;
set @@session.response_attrs_contain_warnings_bytes = default;
use test;
drop table if exists mytbl;
