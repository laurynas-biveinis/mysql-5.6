# ----------------------------------------------------
# Tests for the performance schema statement Digests.
# ----------------------------------------------------

--source include/xplugin_wait_for_interfaces.inc
# Test case to show behavior of statements digest when
# statement-digest-size is 0

# Initial Setup for Digest
--source ../include/digest_setup.inc

TRUNCATE TABLE performance_schema.events_statements_summary_by_digest;
TRUNCATE TABLE performance_schema.sql_text;

# Executing queries
--source ../include/digest_execution.inc

--echo ####################################
--echo # QUERYING PS STATEMENT DIGEST
--echo ####################################
SELECT SCHEMA_NAME, a.DIGEST, b.DIGEST_TEXT, COUNT_STAR, SUM_ROWS_AFFECTED, SUM_WARNINGS,
       SUM_ERRORS FROM performance_schema.events_statements_summary_by_digest as a,
       performance_schema.sql_text as b where a.digest = b.digest;


SHOW GLOBAL VARIABLES LIKE "performance_schema_digests_size";
SELECT COUNT(*) FROM performance_schema.events_statements_summary_by_digest;

select count(*)
  from performance_schema.events_statements_histogram_by_digest;

select SCHEMA_NAME, DIGEST IS NULL, BUCKET_NUMBER
  from performance_schema.events_statements_histogram_by_digest
  where BUCKET_NUMBER= 1;

--echo ####################################
--echo # PS STATEMENT DIGEST GETS FULL 
--echo # IF WE RUN SAME QUERY IN LOOP
--echo ####################################

create user user_super@localhost identified by 'su';
grant all on *.* to user_super@localhost with grant option;
connect (con, localhost, user_super,su,test);
use test;
TRUNCATE TABLE performance_schema.sql_text;
TRUNCATE TABLE performance_schema.events_statements_summary_by_digest;

SELECT count(*) from performance_schema.events_statements_summary_by_digest;
let $before = query_get_value(show global status like 'Performance_schema_digest_lost', Value, 1);

SELECT count(*) from performance_schema.events_statements_summary_by_digest;

let $after = query_get_value(show global status like 'Performance_schema_digest_lost', Value, 1);
--let $assert_text= Counter for Performance_schema_digest_lost should be 2 
--let $assert_cond= $after - $before = 2
--source include/assert.inc

SELECT SCHEMA_NAME, DIGEST, COUNT_STAR, SUM_ROWS_AFFECTED, SUM_WARNINGS,
       SUM_ERRORS FROM performance_schema.events_statements_summary_by_digest;

drop user user_super@localhost;
# Cleanup for Digest
--source ../include/digest_cleanup.inc
