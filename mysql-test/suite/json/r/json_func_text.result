drop table if exists test_json;
create table test_json(json text);
#
# json_valid
#
# test on table
insert into test_json values
(null),
('{}'),
('{"k":"v"}'),
('{"k":{}}'),
('{"k":[]}'),
('{"k1":"v1","k2":true,"k3":3}'),
('{"k1":{"k2":"v2"}}'),
('{"key":[1,2,3]}'),
('[]'),
('[[[[[]]]]]'),
('[{}]'),
('[1,2,3]'),
('[1,false,"str",1.2]'),
('[{"k1":"v1"},2,3]'),
('[[1,2,3],2,3]'),
(''),
(123),
(1.23),
('abc'),
('{"key"}'),
('{1:value}'),
('{"key":"value"'),
('[1,2,3'),
('{}}'),
('[[]'),
('{[]}'),
(repeat('{"a":',100)),
(repeat('["a",',100)),
('{"MySQL":"开源数据库"}'),
('{"开源数据库":"MySQL"}');
select json_valid(json) as is_valid,json from test_json order by is_valid,json;
is_valid	json
NULL	NULL
0	
0	["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",["a",
0	[[]
0	[1,2,3
0	{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":{"a":
0	{"key":"value"
0	{"key"}
0	{[]}
0	{}}
0	{1:value}
0	abc
1	[[[[[]]]]]
1	[[1,2,3],2,3]
1	[]
1	[{"k1":"v1"},2,3]
1	[{}]
1	[1,2,3]
1	[1,false,"str",1.2]
1	{"k":"v"}
1	{"k":[]}
1	{"k":{}}
1	{"k1":"v1","k2":true,"k3":3}
1	{"k1":{"k2":"v2"}}
1	{"key":[1,2,3]}
1	{"MySQL":"开源数据库"}
1	{"开源数据库":"MySQL"}
1	{}
1	1.23
1	123
insert into test_json values
(repeat('{"a":',101)),
(repeat('["a",',101));
select json_valid(json) as is_valid,json from test_json order by is_valid,json;
ERROR 22032: The JSON document exceeds the maximum depth.
truncate test_json;
#
# json_array_length
#
# test on table
insert into test_json values
(null),
('[]'),
('[1]'),
('["str"]'),
('[null]'),
('[true,false]'),
('[1.234]'),
('[1,"str",null,true,false,1.2345]'),
('[[[[[[]]]]]]'),
('[[],[],[],[],[]]'),
('[[1,2,3],{"k1":"v1"},{"k2":2},[4,5,6]]'),
('[{"MySQL":"开源数据库"},"MySQL"]'),
('[{"开源数据库":"MySQL"},"开源数据库"]');
select json_array_length(json) as is_valid,json from test_json order by is_valid,json;
is_valid	json
NULL	NULL
0	[]
1	["str"]
1	[[[[[[]]]]]]
1	[1.234]
1	[1]
1	[null]
2	[{"MySQL":"开源数据库"},"MySQL"]
2	[{"开源数据库":"MySQL"},"开源数据库"]
2	[true,false]
4	[[1,2,3],{"k1":"v1"},{"k2":2},[4,5,6]]
5	[[],[],[],[],[]]
6	[1,"str",null,true,false,1.2345]
truncate test_json;
#
# json_contains_key
#
# test on table
insert into test_json values
(null),
('{}'),
('{"k1":"v1"}'),
('[1,2,3,4]'),
('{"k1":{"k2":{"k3":12.345}}}'),
('{"k1":"v1","k1":{"k2":"v2"}}'),
('{"k1":[1,{"k2":["v1",2,true]},3,false]}');
select json_contains_key(json,null) as json_contains_key,json from test_json order by json_contains_key,json;
json_contains_key	json
NULL	NULL
0	[1,2,3,4]
0	{"k1":"v1","k1":{"k2":"v2"}}
0	{"k1":"v1"}
0	{"k1":[1,{"k2":["v1",2,true]},3,false]}
0	{"k1":{"k2":{"k3":12.345}}}
0	{}
select json_contains_key(json,'k1',null) as json_contains_key,json from test_json order by json_contains_key,json;
json_contains_key	json
NULL	NULL
0	[1,2,3,4]
0	{"k1":"v1","k1":{"k2":"v2"}}
0	{"k1":"v1"}
0	{"k1":[1,{"k2":["v1",2,true]},3,false]}
0	{"k1":{"k2":{"k3":12.345}}}
0	{}
select json_contains_key(json,'k2') as json_contains_key,json from test_json order by json_contains_key,json;
json_contains_key	json
NULL	NULL
0	[1,2,3,4]
0	{"k1":"v1","k1":{"k2":"v2"}}
0	{"k1":"v1"}
0	{"k1":[1,{"k2":["v1",2,true]},3,false]}
0	{"k1":{"k2":{"k3":12.345}}}
0	{}
select json_contains_key(json,'k1') as json_contains_key,json from test_json order by json_contains_key,json;
json_contains_key	json
NULL	NULL
0	[1,2,3,4]
0	{}
1	{"k1":"v1","k1":{"k2":"v2"}}
1	{"k1":"v1"}
1	{"k1":[1,{"k2":["v1",2,true]},3,false]}
1	{"k1":{"k2":{"k3":12.345}}}
select json_contains_key(json,'k1','k2') as json_contains_key,json from test_json order by json_contains_key,json;
json_contains_key	json
NULL	NULL
0	[1,2,3,4]
0	{"k1":"v1"}
0	{"k1":[1,{"k2":["v1",2,true]},3,false]}
0	{}
1	{"k1":"v1","k1":{"k2":"v2"}}
1	{"k1":{"k2":{"k3":12.345}}}
select json_contains_key(json,'k1','k2','k3') as json_contains_key,json from test_json order by json_contains_key,json;
json_contains_key	json
NULL	NULL
0	[1,2,3,4]
0	{"k1":"v1","k1":{"k2":"v2"}}
0	{"k1":"v1"}
0	{"k1":[1,{"k2":["v1",2,true]},3,false]}
0	{}
1	{"k1":{"k2":{"k3":12.345}}}
select json_contains_key(json,0) as json_contains_key,json from test_json order by json_contains_key,json;
json_contains_key	json
NULL	NULL
0	{"k1":"v1","k1":{"k2":"v2"}}
0	{"k1":"v1"}
0	{"k1":[1,{"k2":["v1",2,true]},3,false]}
0	{"k1":{"k2":{"k3":12.345}}}
0	{}
1	[1,2,3,4]
select json_contains_key(json,'1') as json_contains_key,json from test_json order by json_contains_key,json;
json_contains_key	json
NULL	NULL
0	{"k1":"v1","k1":{"k2":"v2"}}
0	{"k1":"v1"}
0	{"k1":[1,{"k2":["v1",2,true]},3,false]}
0	{"k1":{"k2":{"k3":12.345}}}
0	{}
1	[1,2,3,4]
select json_contains_key(json,'k1',1) as json_contains_key,json from test_json order by json_contains_key,json;
json_contains_key	json
NULL	NULL
0	[1,2,3,4]
0	{"k1":"v1","k1":{"k2":"v2"}}
0	{"k1":"v1"}
0	{"k1":{"k2":{"k3":12.345}}}
0	{}
1	{"k1":[1,{"k2":["v1",2,true]},3,false]}
select json_contains_key(json,'k1',1,'k2') as json_contains_key,json from test_json order by json_contains_key,json;
json_contains_key	json
NULL	NULL
0	[1,2,3,4]
0	{"k1":"v1","k1":{"k2":"v2"}}
0	{"k1":"v1"}
0	{"k1":{"k2":{"k3":12.345}}}
0	{}
1	{"k1":[1,{"k2":["v1",2,true]},3,false]}
select json_contains_key(json,'k1',1,'k2',0) as json_contains_key,json from test_json order by json_contains_key,json;
json_contains_key	json
NULL	NULL
0	[1,2,3,4]
0	{"k1":"v1","k1":{"k2":"v2"}}
0	{"k1":"v1"}
0	{"k1":{"k2":{"k3":12.345}}}
0	{}
1	{"k1":[1,{"k2":["v1",2,true]},3,false]}
truncate test_json;
# test multi-byte characters
insert into test_json values
('{"MySQL":"开源数据库"}'),
('{"开源数据库":"MySQL"}');
select length(json_contains_key(json,'MySQL')) as length,json_contains_key(json,'MySQL') as json_contains_key,json from test_json order by length,json_contains_key,json;
length	json_contains_key	json
1	0	{"开源数据库":"MySQL"}
1	1	{"MySQL":"开源数据库"}
select length(json_contains_key(json,'开源数据库')) as length,json_contains_key(json,'开源数据库') as json_contains_key,json from test_json order by length,json_contains_key,json;
length	json_contains_key	json
1	0	{"MySQL":"开源数据库"}
1	1	{"开源数据库":"MySQL"}
truncate test_json;
#
# cleanup
#
drop table test_json;
