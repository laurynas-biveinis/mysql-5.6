--disable_warnings
drop table if exists test_json;
--enable_warnings
create table test_json(json JSON);

--echo #
--echo # json_valid
--echo #

--echo # test on table
insert into test_json values
(null),
('{}'),
('{"k":"v"}'),
('{"k":{}}'),
('{"k":[]}'),
('{"k1":"v1","k2":true,"k3":3}'),
('{"k1":{"k2":"v2"}}'),
('{"key":[1,2,3]}'),
('[]'),
('[[[[[]]]]]'),
('[{}]'),
('[1,2,3]'),
('[1,false,"str",1.2]'),
('[{"k1":"v1"},2,3]'),
('[[1,2,3],2,3]'),
('{"MySQL":"开源数据库"}'),
('{"开源数据库":"MySQL"}');

select json_valid(json) as is_valid,json from test_json order by is_valid,json;

truncate test_json;

--error ER_INVALID_JSON_BINARY_DATA
insert into test_json values(json_extract('{"k1":{"k2": "v2", "k2" : "v3"}, "k1":{"k2": "v4", "k2" : "v5"}}', 'k1'));

--source suite/json/inc/fb_json_common_1.inc

--echo #
--echo # cleanup
--echo #
drop table test_json;
