CREATE TABLE t (i int, j int, k int, primary key(i, j, k), key j1 (j, i), key j2 (j, k)) engine=RocksDB;
INSERT INTO t VALUES (1, 2, 3);
INSERT INTO t VALUES (1, 3, 2);
INSERT INTO t VALUES (3, 2, 1);
EXPLAIN SELECT * FROM t FORCE INDEX(PRIMARY) WHERE i = 1 and j = 2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t	NULL	ref	PRIMARY	PRIMARY	8	const,const	#	#	Using index
Warnings:
Note	1003	/* select#1 */ select `test`.`t`.`i` AS `i`,`test`.`t`.`j` AS `j`,`test`.`t`.`k` AS `k` from `test`.`t` FORCE INDEX (PRIMARY) where ((`test`.`t`.`j` = 2) and (`test`.`t`.`i` = 1))
EXPLAIN SELECT * FROM t FORCE INDEX(j1) WHERE i = 1 and j = 2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t	NULL	ref	j1	j1	8	const,const	#	#	Using index
Warnings:
Note	1003	/* select#1 */ select `test`.`t`.`i` AS `i`,`test`.`t`.`j` AS `j`,`test`.`t`.`k` AS `k` from `test`.`t` FORCE INDEX (`j1`) where ((`test`.`t`.`j` = 2) and (`test`.`t`.`i` = 1))
EXPLAIN SELECT * FROM t FORCE INDEX(j2) WHERE i = 1 and j = 2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t	NULL	ref	j2	j2	4	const	#	#	Using where; Using index
Warnings:
Note	1003	/* select#1 */ select `test`.`t`.`i` AS `i`,`test`.`t`.`j` AS `j`,`test`.`t`.`k` AS `k` from `test`.`t` FORCE INDEX (`j2`) where ((`test`.`t`.`j` = 2) and (`test`.`t`.`i` = 1))
set global optimizer_force_index_rewrite = "PRIMARY:j1,j1:j2";
EXPLAIN SELECT * FROM t FORCE INDEX(PRIMARY) WHERE i = 1 and j = 2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t	NULL	ref	j1	j1	8	const,const	#	#	Using index
Warnings:
Note	1003	/* select#1 */ select `test`.`t`.`i` AS `i`,`test`.`t`.`j` AS `j`,`test`.`t`.`k` AS `k` from `test`.`t` FORCE INDEX (PRIMARY) where ((`test`.`t`.`j` = 2) and (`test`.`t`.`i` = 1))
EXPLAIN SELECT * FROM t FORCE INDEX(j1) WHERE i = 1 and j = 2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t	NULL	ref	j2	j2	4	const	#	#	Using where; Using index
Warnings:
Note	1003	/* select#1 */ select `test`.`t`.`i` AS `i`,`test`.`t`.`j` AS `j`,`test`.`t`.`k` AS `k` from `test`.`t` FORCE INDEX (`j1`) where ((`test`.`t`.`j` = 2) and (`test`.`t`.`i` = 1))
EXPLAIN SELECT * FROM t FORCE INDEX(j2) WHERE i = 1 and j = 2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t	NULL	ref	j2	j2	4	const	#	#	Using where; Using index
Warnings:
Note	1003	/* select#1 */ select `test`.`t`.`i` AS `i`,`test`.`t`.`j` AS `j`,`test`.`t`.`k` AS `k` from `test`.`t` FORCE INDEX (`j2`) where ((`test`.`t`.`j` = 2) and (`test`.`t`.`i` = 1))
set global optimizer_force_index_rewrite = "PRIMARY:asdf,j1:asdf";
EXPLAIN SELECT * FROM t FORCE INDEX(PRIMARY) WHERE i = 1 and j = 2;
ERROR 42000: Key 'asdf' doesn't exist in table 't'
EXPLAIN SELECT * FROM t FORCE INDEX(j1) WHERE i = 1 and j = 2;
ERROR 42000: Key 'asdf' doesn't exist in table 't'
EXPLAIN SELECT * FROM t FORCE INDEX(j2) WHERE i = 1 and j = 2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t	NULL	ref	j2	j2	4	const	#	#	Using where; Using index
Warnings:
Note	1003	/* select#1 */ select `test`.`t`.`i` AS `i`,`test`.`t`.`j` AS `j`,`test`.`t`.`k` AS `k` from `test`.`t` FORCE INDEX (`j2`) where ((`test`.`t`.`j` = 2) and (`test`.`t`.`i` = 1))
set global rocksdb_select_bypass_policy = always_on;
set global optimizer_force_index_rewrite = "PRIMARY:asdf,j1:j2,j2:PRIMARY";
SELECT i,j,k FROM t FORCE INDEX(PRIMARY) WHERE i > 0;
ERROR 42000: SELECT statement pattern not supported: Unrecognized index: 'asdf'
SELECT i,j,k FROM t FORCE INDEX(j1) WHERE j > 0;
i	j	k
3	2	1
1	2	3
1	3	2
SELECT i,j,k FROM t FORCE INDEX(j2) WHERE j > 0;
i	j	k
1	2	3
1	3	2
3	2	1
set global optimizer_force_index_rewrite = DEFAULT;
set global rocksdb_select_bypass_policy = DEFAULT;
DROP TABLE t;
