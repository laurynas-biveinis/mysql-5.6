create table t (i int primary key) engine=rocksdb;
drop table t;
create table t (i int primary key, j int, key(j) comment 'rev:bf5_2') engine=rocksdb;
select RIGHT(HEX(index_number), 2) from information_schema.rocksdb_ddl where table_name = 't';
RIGHT(HEX(index_number), 2)
FE
FF
insert into t values (1, 1);
select j from t order by j asc;
j
1
select j from t order by j desc;
j
1
drop table t;
create table t(
a int unsigned not null,
b int unsigned not null,
c varchar(64) not null COLLATE utf8_bin,
primary key(a),
key(b,c)
) DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
Warnings:
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
begin;
insert into t values(101, 101, 'view_routine_usage');
update t set b = 100 where b = 101 and c like 'view_routine_usage';
update t set b = 101 where b = 100 and c like 'view_routine_usage';
select a from t where b = 101 and c like 'view_routine_usage';
a
101
rollback;
drop table t;
create table t(
a int unsigned not null,
b int unsigned not null,
c varchar(64) not null COLLATE utf8_bin,
primary key(a),
key(b,c) comment 'rev:bc'
) DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
Warnings:
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
begin;
insert into t values(110, 110, 'view_routine_usage');
insert into t values(100, 100, 'view_routine_usage');
update t set b = 101 where b = 100 and c like 'view_routine_usage';
update t set b = 100 where b = 101 and c like 'view_routine_usage';
select a from t where b = 101 and c like 'view_routine_usage';
a
rollback;
drop table t;
set optimizer_force_index_for_range = on;
create table t3(
a int, 
b varchar(36) CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL, 
c int, 
primary key(a), key b(b, c)
);
insert into t3 values(1, "11",1),(2,"22",2),(3,"33",3);
explain select count(*) from t3 force index(b) where b in ("", "33");
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t3	NULL	range	b	b	#	NULL	#	#	Using where; Using index
Warnings:
Note	1003	/* select#1 */ select count(0) AS `count(*)` from `test`.`t3` FORCE INDEX (`b`) where (`test`.`t3`.`b` in ('','33'))
select count(*) from t3 force index(b) where b in ("", "33");
count(*)
1
explain select count(*) from t3 force index(b) where b in ("", "33", "","33");
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t3	NULL	range	b	b	#	NULL	#	#	Using where; Using index
Warnings:
Note	1003	/* select#1 */ select count(0) AS `count(*)` from `test`.`t3` FORCE INDEX (`b`) where (`test`.`t3`.`b` in ('','33','','33'))
select count(*) from t3 force index(b) where b in ("", "33", "","33");
count(*)
1
drop table t3;
set optimizer_force_index_for_range = on;
create table t2(
a int, 
b int, 
c bigint, 
d bigint, 
primary key(a), key b(b,c,d)
);
insert into t2 values(1,1,1,1),(2,2,2,2),(3,3,3,3);
explain select count(*) from t2 force index(b) where b = 2 or (b = 3 and c=3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	NULL	range	b	b	#	NULL	#	#	Using where; Using index
Warnings:
Note	1003	/* select#1 */ select count(0) AS `count(*)` from `test`.`t2` FORCE INDEX (`b`) where ((`test`.`t2`.`b` = 2) or ((`test`.`t2`.`c` = 3) and (`test`.`t2`.`b` = 3)))
select count(*) from t2 force index(b) where b = 2 or (b = 3 and c=3);
count(*)
2
explain select count(*) from t2 force index(b) where (b = 3 and c=3) or b = 2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	NULL	range	b	b	#	NULL	#	#	Using where; Using index
Warnings:
Note	1003	/* select#1 */ select count(0) AS `count(*)` from `test`.`t2` FORCE INDEX (`b`) where (((`test`.`t2`.`c` = 3) and (`test`.`t2`.`b` = 3)) or (`test`.`t2`.`b` = 2))
select count(*) from t2 force index(b) where (b = 3 and c=3) or b = 2;
count(*)
2
drop table t2;
