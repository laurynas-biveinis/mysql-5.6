SELECT @@rocksdb_bypass_rpc_on INTO @save_rocksdb_bypass_rpc_on;
set global rocksdb_bypass_rpc_on=1;
SELECT @@rocksdb_select_bypass_policy into @save_rocksdb_select_bypass_policy;
SET GLOBAL rocksdb_select_bypass_policy=2;
SELECT @@rocksdb_select_bypass_allow_filters into @save_rocksdb_select_bypass_allow_filters;
SET GLOBAL rocksdb_select_bypass_allow_filters=0;
SELECT @@rocksdb_bypass_rpc_log_rejected into @save_rocksdb_bypass_rpc_log_rejected;
SET GLOBAL rocksdb_bypass_rpc_log_rejected=1;
SELECT variable_value INTO @queries_executed_0 FROM performance_schema.global_status WHERE
variable_name="rocksdb_bypass_rpc_executed";
SELECT variable_value INTO @queries_failed_0 FROM performance_schema.global_status WHERE
variable_name="rocksdb_bypass_rpc_failed";
SELECT variable_value INTO @queries_rejected_0 FROM performance_schema.global_status WHERE
variable_name="rocksdb_bypass_rpc_rejected";
create table t1 (pk INT PRIMARY KEY NOT NULL, a INT NOT NULL, b INT NOT NULL,
c INT NOT NULL, d INT NOT NULL, KEY a (a, b, c)) ENGINE=ROCKSDB;
create table t2 (pk INT PRIMARY KEY NOT NULL, a INT NOT NULL, b INT NOT NULL,
c INT NOT NULL, KEY a (a, b, c)) ENGINE=ROCKSDB;
create table t3 (pk INT PRIMARY KEY NOT NULL, a INT NOT NULL, b INT NOT NULL,
c VARCHAR(15) CHARACTER SET latin1 NOT NULL, KEY a (a, b)) ENGINE=ROCKSDB;
create table t4 (pk INT PRIMARY KEY, a INT) ENGINE=ROCKSDB;
create table t5 (pk int primary key, a varchar(128) not null collate latin1_swedish_ci, b varchar(128) not null collate latin1_swedish_ci, index (a)) engine=rocksdb;
SELECT variable_value INTO @bypass_executed_0 FROM
performance_schema.global_status WHERE
variable_name="rocksdb_bypass_rpc_executed";
SELECT variable_value INTO @bypass_failed_0 FROM
performance_schema.global_status WHERE
variable_name="rocksdb_bypass_rpc_failed";
SELECT variable_value INTO @bypass_rejected_0 FROM
performance_schema.global_status WHERE
variable_name="rocksdb_bypass_rpc_rejected";
INSTALL PLUGIN test_bypass_rpc_plugin_info SONAME 'TEST_BYPASS_RPC_PLUGIN';
UNINSTALL PLUGIN test_bypass_rpc_plugin_info;
SELECT variable_value INTO @queries_executed_1 FROM performance_schema.global_status WHERE
variable_name="rocksdb_bypass_rpc_executed";
SELECT variable_value INTO @queries_failed_1 FROM performance_schema.global_status WHERE
variable_name="rocksdb_bypass_rpc_failed";
SELECT variable_value INTO @queries_rejected_1 FROM performance_schema.global_status WHERE
variable_name="rocksdb_bypass_rpc_rejected";
SELECT @queries_executed_1 - @queries_executed_0;
@queries_executed_1 - @queries_executed_0
0
SELECT @queries_failed_1 - @queries_failed_0;
@queries_failed_1 - @queries_failed_0
14
SELECT @queries_rejected_1 - @queries_rejected_0;
@queries_rejected_1 - @queries_rejected_0
26
SELECT @@rocksdb_select_bypass_rejected_query_history_size into @save_rocksdb_select_bypass_rejected_query_history_size;
SELECT @@rocksdb_bypass_rpc_rejected_log_ts_interval_secs into @save_rocksdb_bypass_rpc_rejected_log_ts_interval_secs;
set global rocksdb_select_bypass_rejected_query_history_size=4;
set global rocksdb_bypass_rpc_rejected_log_ts_interval_secs=0;
SELECT @@rocksdb_bypass_rpc_log_rejected;
@@rocksdb_bypass_rpc_log_rejected
1
SELECT @@rocksdb_select_bypass_rejected_query_history_size;
@@rocksdb_select_bypass_rejected_query_history_size
4
SELECT @@rocksdb_bypass_rpc_rejected_log_ts_interval_secs;
@@rocksdb_bypass_rpc_rejected_log_ts_interval_secs
0
INSTALL PLUGIN test_bypass_rpc_plugin_info SONAME 'TEST_BYPASS_RPC_PLUGIN';
UNINSTALL PLUGIN test_bypass_rpc_plugin_info;
SELECT variable_value INTO @queries_executed_2 FROM performance_schema.global_status WHERE
variable_name="rocksdb_bypass_rpc_executed";
SELECT variable_value INTO @queries_failed_2 FROM performance_schema.global_status WHERE
variable_name="rocksdb_bypass_rpc_failed";
SELECT variable_value INTO @queries_rejected_2 FROM performance_schema.global_status WHERE
variable_name="rocksdb_bypass_rpc_rejected";
SELECT @queries_executed_2 - @queries_executed_0;
@queries_executed_2 - @queries_executed_0
0
SELECT @queries_failed_2 - @queries_failed_0;
@queries_failed_2 - @queries_failed_0
17
SELECT @queries_rejected_2 - @queries_rejected_0;
@queries_rejected_2 - @queries_rejected_0
29
SELECT QUERY, ERROR_MSG, BYPASS_TYPE from information_schema.ROCKSDB_BYPASS_REJECTED_QUERY_HISTORY;
QUERY	ERROR_MSG	BYPASS_TYPE
SELECT /* bypass rpc */ d FROM test.t1 FORCE INDEX (a) WHERE a=1 AND b>2 AND d>4	Non-optimal queries with filters are not allowed	RPC
SELECT /* bypass rpc */ d FROM test.t1 FORCE INDEX (a) WHERE a=1 AND b=2 AND d>4	Non-optimal queries with filters are not allowed	RPC
SELECT /* bypass rpc */ pk FROM test.t1 WHERE pk>1 AND pk>2 AND pk>3	Unsupported range query pattern	RPC
SELECT `d` FROM `test` . `t1` FORCE INDEX ( `a` ) WHERE `a` = ? AND `b` > ? AND `d` > ?	Non-optimal queries with filters are not allowed	SQL
set global rocksdb_bypass_rpc_rejected_log_ts_interval_secs=999;
SELECT @@rocksdb_bypass_rpc_rejected_log_ts_interval_secs;
@@rocksdb_bypass_rpc_rejected_log_ts_interval_secs
999
INSTALL PLUGIN test_bypass_rpc_plugin_info SONAME 'TEST_BYPASS_RPC_PLUGIN';
UNINSTALL PLUGIN test_bypass_rpc_plugin_info;
SELECT variable_value INTO @queries_executed_3 FROM performance_schema.global_status WHERE
variable_name="rocksdb_bypass_rpc_executed";
SELECT variable_value INTO @queries_failed_3 FROM performance_schema.global_status WHERE
variable_name="rocksdb_bypass_rpc_failed";
SELECT variable_value INTO @queries_rejected_3 FROM performance_schema.global_status WHERE
variable_name="rocksdb_bypass_rpc_rejected";
SELECT @queries_executed_3 - @queries_executed_0;
@queries_executed_3 - @queries_executed_0
0
SELECT @queries_failed_3 - @queries_failed_0;
@queries_failed_3 - @queries_failed_0
20
SELECT @queries_rejected_3 - @queries_rejected_0;
@queries_rejected_3 - @queries_rejected_0
32
SELECT QUERY, ERROR_MSG, BYPASS_TYPE from information_schema.ROCKSDB_BYPASS_REJECTED_QUERY_HISTORY;
QUERY	ERROR_MSG	BYPASS_TYPE
SELECT `d` FROM `test` . `t1` FORCE INDEX ( `a` ) WHERE `a` = ? AND `b` > ? AND `d` > ?	Non-optimal queries with filters are not allowed	SQL
SELECT `d` FROM `test` . `t1` FORCE INDEX ( `a` ) WHERE `a` = ? AND `b` = ? AND `d` > ?	Non-optimal queries with filters are not allowed	SQL
SELECT `pk` FROM `test` . `t1` WHERE `pk` > ? AND `pk` > ? AND `pk` > ?	Unsupported range query pattern	SQL
SELECT /* bypass rpc */ d FROM test.t1 FORCE INDEX (a) WHERE a=1 AND b>2 AND d>4	Non-optimal queries with filters are not allowed	RPC
set global rocksdb_bypass_rpc_on=@save_rocksdb_bypass_rpc_on;
set global rocksdb_bypass_rpc_log_rejected=@save_rocksdb_bypass_rpc_log_rejected;
set global rocksdb_select_bypass_rejected_query_history_size=@save_rocksdb_select_bypass_rejected_query_history_size;
set global rocksdb_bypass_rpc_rejected_log_ts_interval_secs=@save_rocksdb_bypass_rpc_rejected_log_ts_interval_secs;
set global rocksdb_select_bypass_allow_filters=@save_rocksdb_select_bypass_allow_filters;
set global rocksdb_select_bypass_policy=@save_rocksdb_select_bypass_policy;
drop table t1;
drop table t2;
drop table t3;
drop table t4;
drop table t5;
