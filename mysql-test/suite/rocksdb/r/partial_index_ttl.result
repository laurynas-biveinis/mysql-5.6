DROP TABLE IF EXISTS t;
SET GLOBAL rocksdb_pause_ttl_compaction_filter = 0;
CREATE TABLE t (
i varchar(64), j varchar(64), k varchar(64),l varchar(64),
`ts` bigint(20) UNSIGNED NOT NULL,
PRIMARY KEY (i, j),
KEY ik1 (i, k) COMMENT 'cfname=cf;partial_group_keyparts=1;partial_group_threshold=5'
) ENGINE=ROCKSDB DEFAULT CHARSET=latin1 COMMENT='ttl_duration=2;ttl_col=ts;';
Warnings:
Warning	1681	Integer display width is deprecated and will be removed in a future release.
INSERT INTO t values ("1", "1", "2", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("1", "2", "1", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("11111111", "1", "9", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("11111111", "2", "8", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("11111111", "3", "7", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("11111111", "4", "5", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("11111111", "5", "4", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("11111111", "6", "2", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("111111111", "1", "9", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("111111111", "2", "2", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("11111112", "1", "1", "1", UNIX_TIMESTAMP());
SELECT COUNT(*) FROM t;
COUNT(*)
11
SELECT COUNT(*) FROM t FORCE INDEX (ik1);
COUNT(*)
11
CREATE TEMPORARY TABLE t1 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';
SET GLOBAL rocksdb_pause_ttl_compaction_filter = 1;
set global rocksdb_force_flush_memtable_now=1;
set global rocksdb_compact_cf='default';
SELECT COUNT(*) FROM t;
COUNT(*)
0
SELECT COUNT(*) FROM t FORCE INDEX (ik1);
COUNT(*)
0
SET GLOBAL rocksdb_pause_ttl_compaction_filter = 0;
INSERT INTO t values ("11111111", "1", "9", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("11111111", "2", "8", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("11111111", "3", "7", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("11111111", "4", "5", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("11111111", "5", "4", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("11111111", "6", "2", "1", UNIX_TIMESTAMP());
SET GLOBAL rocksdb_pause_ttl_compaction_filter = 1;
set global rocksdb_force_flush_memtable_now=1;
set global rocksdb_compact_cf='cf';
SELECT COUNT(*) FROM t;
COUNT(*)
0
SELECT COUNT(*) FROM t FORCE INDEX (ik1);
COUNT(*)
0
SET GLOBAL rocksdb_pause_ttl_compaction_filter = 0;
INSERT INTO t values ("11111111", "1", "9", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("11111111", "2", "8", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("11111111", "3", "7", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("11111111", "4", "5", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("11111111", "5", "4", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("11111111", "6", "2", "1", UNIX_TIMESTAMP());
SELECT COUNT(*) FROM t;
COUNT(*)
6
SET GLOBAL rocksdb_pause_ttl_compaction_filter = 1;
set global rocksdb_force_flush_memtable_now=1;
set global rocksdb_compact_cf='default';
SELECT COUNT(*) FROM t;
COUNT(*)
0
INSERT INTO t values ("11111111", "1", "9", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("11111111", "2", "8", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("11111111", "3", "7", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("11111111", "4", "5", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("11111111", "5", "4", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("11111111", "6", "2", "1", UNIX_TIMESTAMP());
SELECT COUNT(*) FROM t FORCE INDEX (ik1);
COUNT(*)
6
CREATE TEMPORARY TABLE t2 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';
SELECT variable_name, t2.variable_value - t1.variable_value AS diff FROM t1 JOIN t2 USING (variable_name);
variable_name	diff
rocksdb_partial_index_groups_materialized	0
rocksdb_partial_index_groups_sorted	0
rocksdb_partial_index_rows_materialized	0
rocksdb_partial_index_rows_sorted	0
include/assert.inc [Check that materialized groups are zero.]
include/assert.inc [Check that materialized rows are zero.]
DROP TABLE t1;
DROP TABLE t2;
SET GLOBAL rocksdb_pause_ttl_compaction_filter = 0;
CREATE TEMPORARY TABLE t1 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';
INSERT INTO t values ("222222", "1", "9", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("222222", "2", "8", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("222222", "3", "7", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("222222", "4", "6", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("222222", "5", "4", "1", UNIX_TIMESTAMP()-1000);
INSERT INTO t values ("222222", "6", "3", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("222222", "7", "2", "1", UNIX_TIMESTAMP());
INSERT INTO t values ("222222", "8", "1", "1", UNIX_TIMESTAMP()-1000);
SELECT COUNT(*) FROM t;
COUNT(*)
12
SELECT COUNT(*) FROM t FORCE INDEX (ik1);
COUNT(*)
12
CREATE TEMPORARY TABLE t2 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';
SELECT variable_name, t2.variable_value - t1.variable_value AS diff FROM t1 JOIN t2 USING (variable_name);
variable_name	diff
rocksdb_partial_index_groups_materialized	1
rocksdb_partial_index_groups_sorted	1
rocksdb_partial_index_rows_materialized	6
rocksdb_partial_index_rows_sorted	6
include/assert.inc [Check that materialized group is 1.]
include/assert.inc [Check that materialized rows are 6, meaning only meterialize alive rows.]
DROP TABLE t1;
DROP TABLE t2;
DROP TABLE t;
