source ../include/raft_3_node.inc;
source include/have_binlog_format_row.inc;
source include/only_mts_replica_parallel_type_dependency.inc;
if (`SELECT @@GLOBAL.replica_parallel_workers < 2`)
{
     skip Test needs to run with multiple replica workers;
}

# create tables in two different databases
connection server_1;
create database d1;
create database d2;
create table d1.t1(a int primary key) engine = innodb;
create table d2.t2(a int primary key) engine = innodb;
insert into d1.t1 values(1);
insert into d2.t2 values(1);
let $sync_slave_connection= server_2;
source include/sync_slave_sql_with_master.inc;
let $sync_slave_connection= server_3;
source include/sync_slave_sql_with_master.inc;

# block writes on d1.t1 in server_2
connection server_2;
SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;
begin;
update d1.t1 set a = a + 100;

connection server_1;
update d1.t1 set a = a + 1; # this will be blocked on server2
insert into d2.t2 values(2);

# wait for 2nd insert for d2.t2 to go through
connection server_2;
let $wait_condition = select count(*) = 2 from d2.t2;
let $wait_timeout= 120;
source include/wait_condition.inc;
select * from d2.t2;

# now unlock d1.t1 so that its update commits after d2.t2's insert
rollback;

# transfer leadership to server_2
connection server_1;
let $rpl_raft_leader_number= 2;
source ../include/raft_promote_to_leader.inc;

connection server_1;
show status like 'rpl_raft_role';
select * from d1.t1;
select * from d2.t2;
connection server_2;
show status like 'rpl_raft_role';
select * from d1.t1;
select * from d2.t2;
connection server_3;
show status like 'rpl_raft_role';
select * from d1.t1;
select * from d2.t2;

# cleanup
connection server_2;
let $rpl_raft_leader_number= 1;
source ../include/raft_promote_to_leader.inc;

connection server_1;
drop table d1.t1;
drop table d2.t2;
drop database d1;
drop database d2;
let $sync_slave_connection= server_2;
source include/sync_slave_sql_with_master.inc;
let $sync_slave_connection= server_3;
source include/sync_slave_sql_with_master.inc;


source include/rpl_end.inc;
