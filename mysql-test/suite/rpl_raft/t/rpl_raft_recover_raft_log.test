source ../include/raft_3_node.inc;
connection server_1;
call mtr.add_suppression(".*");
connection server_1;
create table t1 (a int primary key) engine = innodb;
insert into t1 values(1);
insert into t1 values(2);

let $sync_slave_connection= server_2;
source include/sync_slave_sql_with_master.inc;
let $sync_slave_connection= server_3;
source include/sync_slave_sql_with_master.inc;

connection server_2;
select * from t1;

connection server_3;
select * from t1;

connection server_2;
select sleep(10);

# Expand this test later to cover multiple scenarios
let $server2_datadir = `select @@datadir`;
let $server2_raft_file = query_get_value("SHOW SLAVE STATUS", "Relay_Log_File", 1);
let $server2_raft_file_pos = query_get_value("SHOW SLAVE STATUS", "Relay_Log_Pos", 1);
echo "raft file: $server2_raft_file";
echo "raft file pos: $server2_raft_file_pos";
let $half = `select ROUND($server2_raft_file_pos / 2)`;
exec truncate -s $half $server2_datadir/$server2_raft_file;

echo "Restarting server_2";
let $rpl_server_number = 2;
source include/rpl_restart_server.inc;

connection server_2;
# wait for raft plugin initialzed
sleep 10;
start slave sql_thread;

connection server_1;
insert into t1 values(3);

let $sync_slave_connection= server_2;
source include/sync_slave_sql_with_master.inc;
let $sync_slave_connection= server_3;
source include/sync_slave_sql_with_master.inc;

connection server_2;
select * from t1;

connection server_3;
select * from t1;

# cleanup
connection server_1;
drop table t1;

let $sync_slave_connection= server_2;
source include/sync_slave_sql_with_master.inc;
let $sync_slave_connection= server_3;
source include/sync_slave_sql_with_master.inc;

source include/rpl_end.inc;
