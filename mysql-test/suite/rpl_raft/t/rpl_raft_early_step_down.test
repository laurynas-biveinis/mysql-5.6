source ../include/raft_3_node.inc;
source include/have_debug_sync.inc;

connection server_2;
let $uuid2= `select variable_value from performance_schema.global_status where variable_name = 'Rpl_raft_peer_uuid'`;

# Setup table with 1 row and ensure it's replicated
connection server_1;
create table t1 (a int primary key);
insert into t1 values (0);
let $sync_slave_connection= server_2;
source include/sync_slave_sql_with_master.inc;

echo "Stopping sql_thread on server_2 and blocking further applies";
connection server_2;
stop replica sql_thread;
set @@global.rpl_raft_debug_sync_point = "UpdateConsensusApplied";

echo "Pushing new write on leader: server_1";
# Update the row, should replicate but not apply
connection server_1;
update t1 set a = 2;

# Ensure replicated
let $sync_slave_connection= server_2;
source include/sync_slave_io_with_master.inc;

# Check OpID as well as table itself
connection server_1;
show status like "Rpl_raft_last_appended_opid";
show status like "Rpl_raft_slave_last_applied_trx";
select * from t1;

connection server_2_1;
show status like "Rpl_raft_last_appended_opid";
show status like "Rpl_raft_slave_last_applied_trx";
select * from t1;

connection server_1;
echo "Transfering leader: server_1 -> server_2";
replace_result $uuid2 uuid2;
eval set @@global.rpl_raft_new_leader_uuid = '$uuid2';

connection server_2;
set @@global.rpl_raft_debug_sync_point_action = "wait_for UpdateConsensusApplied";

# Here, server_2 applied a = 2 but is stuck finishing up, this is 1:4. applied_opid should be 1:3

echo "Force leader back: server_2 -> server_1";
connection server_1;
set @@global.rpl_raft_start_election = 1;
let $wait_condition = SELECT @@GLOBAL.READ_ONLY = 0 AND @@GLOBAL.SUPER_READ_ONLY = 0;
source include/wait_condition.inc;
update t1 set a = 3;

echo "Waiting for promote";
connection server_2_1;
let $wait_condition = select variable_value = "3" from performance_schema.global_status where variable_name = 'Rpl_raft_term';
source include/wait_condition.inc;

# Above ensures server 2 knows of promotion give some time for appends to flow and fail
sleep 5;

# Check OpID as well as table itself, should not append due to log switching
show status like "Rpl_raft_last_appended_opid";
show status like "Rpl_raft_slave_last_applied_trx";
select * from t1;

connection server_2;
set @@global.rpl_raft_debug_sync_point = "";

echo "Waiting for applies";
let $wait_condition = select variable_value = "3:7" from performance_schema.global_status where variable_name = 'Rpl_raft_slave_last_applied_trx';
source include/wait_condition.inc;

connection server_2_1;
show status like "Rpl_raft_last_appended_opid";
show status like "Rpl_raft_slave_last_applied_trx";
select * from t1;

source include/rpl_end.inc;
