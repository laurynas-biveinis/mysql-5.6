source ../include/raft_3_node.inc;

echo "server_1 is the initial leader";
# Reject append entries on server 3
connection server_3;
set @@global.rpl_raft_reject_append_entries = 1;

connection server_2;
set @@global.rpl_raft_start_election = 1;

--sleep 5

connection server_1;
let $running1 = query_get_value(SHOW SLAVE STATUS, Slave_SQL_Running, 1);

echo "server1 running state : $running1";

connection server_3;
let $running3 = query_get_value(SHOW SLAVE STATUS, Slave_SQL_Running, 1);

echo "server3 running state :  $running3";

--error ER_RAFT_OPERATION_INCOMPATIBLE
start slave sql_thread;

set @@global.rpl_raft_reject_append_entries = 0;

--sleep 2

let $running3_2 = query_get_value(SHOW SLAVE STATUS, Slave_SQL_Running, 1);

echo "server3 running state now $running3_2";

stop slave sql_thread;

start slave sql_thread;

connection server_1;
set @@global.rpl_raft_start_election = 1;

--sleep 3

let $sync_slave_connection= server_2;
source include/sync_slave_sql_with_master.inc;
let $sync_slave_connection= server_3;
source include/sync_slave_sql_with_master.inc;

source include/rpl_end.inc;
