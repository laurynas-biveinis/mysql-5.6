# Result differences depending on FS case sensitivity.
if (!$require_case_insensitive_file_system)
{
  --source include/have_case_sensitive_file_system.inc
}

-- source ../include/ps_truncate_all_tables.inc
# Tests for sys schema
# Verify the sys.schema_redundant_indexes / x$schema_flattened_keys views

# TODO: Bug#30760026.
# View metadata updates make the view columns after
# the first server restart different from what they look
# like after an upgrade, because the view meta data update
# triggered by the storing of the DD meta data for the
# underlying entities is done using sql_mode=0, which
# is different from the sql_mode used during CREATE
# (i.e. the default sql_mode).
#
# As a short term fix, to avoid noise from test runs,
# we mask the values that become different in order to
# get deterministic results. This short term fix should
# be removed when the underlying issue is fixed.
--replace_column 3 X 5 X

# Ensure structure changes don't slip in
DESC sys.schema_redundant_indexes;

# Make sure view select does not error, but ignore results
--disable_result_log
SELECT * FROM sys.schema_redundant_indexes;
--enable_result_log


# TODO: Bug#30760026.
--replace_column 3 X 5 X

# Ensure structure changes don't slip in
DESC sys.x$schema_flattened_keys;

# Make sure view select does not error, but ignore results
--disable_result_log
SELECT * FROM sys.x$schema_flattened_keys;
--enable_result_log

# Test correctly identifies keys

CREATE DATABASE rkey;

CREATE TABLE rkey.rkey (
  i INT,
  j INT,
  k INT,
  PRIMARY KEY (i),
  KEY (j),
  KEY (j, k),
  KEY (i, j, k)
 );

 SELECT * FROM sys.schema_redundant_indexes ORDER BY table_name, dominant_index_name;

 DROP DATABASE rkey;
