
--echo
--echo ----------------------------------------------
--echo Test PK filtering with single PK BIGINT column
--echo ----------------------------------------------
--echo

CREATE TABLE t1 (   
  pk BIGINT NOT NULL PRIMARY KEY,
  vector1 JSON NOT NULL FB_VECTOR_DIMENSION 3,
  INDEX vector_key_1(vector1) FB_VECTOR_INDEX_TYPE 'flat' 
);

insert into t1 values (1, '[1, 1, 1]'), (2, '[2, 2, 2]'), (3, '[3, 3, 3]'), 
                      (4, '[4, 4, 4]'), (5, '[5, 5, 5]'), (6, '[6, 6, 6]');

insert into t1 values (7, '[11, 1, 1]'), (8, '[21, 2, 2]'), (9, '[31, 3, 3]'), 
                      (10, '[41, 4, 4]'), (11, '[51, 5, 5]'), (12, '[61, 6, 6]');

--echo 
--echo Record value of fb_vector_index_cond_pushdown
SELECT @@SESSION.fb_vector_index_cond_pushdown;

--echo
--echo Vector distance ordering for reference:
explain
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 order by dis limit 100;
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 order by dis limit 100;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo open ended range 
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk > 4 order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo bounded range
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk >= 5 and pk < 10 order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo IN list
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk in (1, 3, 5) order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo IN list with EQ condition
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk in (1, 5) or pk = '3' order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo IN list with LIKE clause
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk in (1, 5) or pk like '1%' order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

drop table t1;

--echo
--echo --------------------------------------------------
--echo Test PK filtering with PK keys parts (BIGINT, INT) 
--echo --------------------------------------------------
--echo

CREATE TABLE t1 (   
  pk_keypart_1 BIGINT NOT NULL,
  pk_keypart_2 INT NOT NULL,
  vector1 JSON NOT NULL FB_VECTOR_DIMENSION 3,
  PRIMARY KEY(pk_keypart_1, pk_keypart_2),
  INDEX vector_key_1(vector1) FB_VECTOR_INDEX_TYPE 'flat' 
);

insert into t1 values (1, 11, '[1, 1, 1]'), (2, 11, '[2, 2, 2]'), (3, 11, '[3, 3, 3]'), 
                      (4, 11, '[4, 4, 4]'), (5, 11, '[5, 5, 5]'), (6, 11, '[6, 6, 6]');

insert into t1 values (7, 112, '[11, 1, 1]'), (8, 112, '[21, 2, 2]'), (9, 112, '[31, 3, 3]'), 
                      (10, 112, '[41, 4, 4]'), (11, 112, '[51, 5, 5]'), (12, 112, '[61, 6, 6]');

--echo
--echo Vector distance ordering for reference:
explain
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 order by dis limit 100;
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 order by dis limit 100;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo open ended range 
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_keypart_1 > 4 order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo bounded range
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_keypart_1 >= 5 and pk_keypart_1 < 10 order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo IN list
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_keypart_1 in (1, 3, 5) order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo IN list with EQ condition
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_keypart_1 in (1, 5) or pk_keypart_1 = '3' order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo IN list with LIKE clause
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_keypart_1 in (1, 5) or pk_keypart_1 like '1%' order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo Filter on pk_keypart_2 EQ condition (negative test)
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_keypart_2 = '115'  order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo Filter on pk_keypart_2 through IN list 
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_keypart_2 in (11, 15)  order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo Filter on pk_keypart_1 LIKE clause and pk_keypart_2 open range condition
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_keypart_2 > 20 and pk_keypart_1 like '1%' order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo Filter on pk_keypart_1 bounded range condition and pk_keypart_2 LIKE clause
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_keypart_1 > 3 and pk_keypart_1 <= 10 and  pk_keypart_2 like '%2' order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo Turn PK pre-filtering OFF and check results
SELECT @@SESSION.fb_vector_index_cond_pushdown;
SET @@SESSION.fb_vector_index_cond_pushdown = false;

select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_keypart_2 > 20 and pk_keypart_1 like '1%' order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo Turn PK pre-filtering ON through query hint and check results
SELECT @@SESSION.fb_vector_index_cond_pushdown;

select /*+ SET_VAR(fb_vector_index_cond_pushdown=ON) */ *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_keypart_2 > 20 and pk_keypart_1 like '1%' order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

# reset variables
SET @@SESSION.fb_vector_index_cond_pushdown = true;

drop table t1;

--echo
--echo --------------------------------------------
--echo Test PK filtering with single PK CHAR column 
--echo --------------------------------------------
--echo

CREATE TABLE t1 (   
  pk_char CHAR (16) NOT NULL PRIMARY KEY,
  vector1 JSON NOT NULL FB_VECTOR_DIMENSION 3,
  INDEX vector_key_1(vector1) FB_VECTOR_INDEX_TYPE 'flat' 
);

insert into t1 values ('one', '[1, 1, 1]'), ('two', '[2, 2, 2]'), ('three', '[3, 3, 3]'), 
                      ('four', '[4, 4, 4]'), ('five', '[5, 5, 5]'), ('six', '[6, 6, 6]');

insert into t1 values ('seven', '[11, 1, 1]'), ('eight', '[21, 2, 2]'), ('nine', '[31, 3, 3]'), 
                      ('ten', '[41, 4, 4]'), ('eleven', '[51, 5, 5]'), ('twelve', '[61, 6, 6]');

--echo
--echo Vector distance ordering for reference:
explain
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 order by dis limit 100;
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 order by dis limit 100;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo open ended range 
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_char > 'f' order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo bounded range
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_char >= 'eleven' and pk_char < 'two' order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo IN list
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_char in ('one', 'three', 'five') order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo IN list with EQ condition
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_char in ('one', 'five') or pk_char = 'three' order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo IN list with LIKE clause
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_char in ('one', 'five') or pk_char like 'e%' order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

drop table t1;

--echo
--echo -----------------------------------------------
--echo Test PK filtering with single PK VARCHAR column 
--echo -----------------------------------------------
--echo

CREATE TABLE t1 (   
  pk_varchar VARCHAR (16) NOT NULL PRIMARY KEY,
  vector1 JSON NOT NULL FB_VECTOR_DIMENSION 3,
  INDEX vector_key_1(vector1) FB_VECTOR_INDEX_TYPE 'flat' 
);

insert into t1 values ('one', '[1, 1, 1]'), ('two', '[2, 2, 2]'), ('three', '[3, 3, 3]'), 
                      ('four', '[4, 4, 4]'), ('five', '[5, 5, 5]'), ('six', '[6, 6, 6]');

insert into t1 values ('seven', '[11, 1, 1]'), ('eight', '[21, 2, 2]'), ('nine', '[31, 3, 3]'), 
                      ('ten', '[41, 4, 4]'), ('eleven', '[51, 5, 5]'), ('twelve', '[61, 6, 6]');

--echo
--echo Vector distance ordering for reference:
explain
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 order by dis limit 100;
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 order by dis limit 100;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo open ended range 
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_varchar > 'f' order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo bounded range
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_varchar >= 'eleven' and pk_varchar < 'two' order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo IN list
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_varchar in ('one', 'three', 'five') order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo IN list with EQ condition
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_varchar in ('one', 'five') or pk_varchar = 'three' order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo IN list with LIKE clause
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_varchar in ('one', 'five') or pk_varchar like 'e%' order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

drop table t1;

--echo
--echo ---------------------------------------------------
--echo Test PK filtering with PK keys parts (CHAR, BIGINT) 
--echo ---------------------------------------------------
--echo

CREATE TABLE t1 (   
  pk_char_keypart_1 CHAR (16) NOT NULL,
  pk_bigint_keypart_2 BIGINT NOT NULL,
  vector1 JSON NOT NULL FB_VECTOR_DIMENSION 3,
  PRIMARY KEY (pk_char_keypart_1, pk_bigint_keypart_2),
  INDEX vector_key_1(vector1) FB_VECTOR_INDEX_TYPE 'flat' 
);

insert into t1 values ('one', 1, '[1, 1, 1]'), ('two', 2, '[2, 2, 2]'), ('three', 3, '[3, 3, 3]'), 
                      ('four', 4, '[4, 4, 4]'), ('five', 5, '[5, 5, 5]'), ('six', 6, '[6, 6, 6]');

insert into t1 values ('seven', 7, '[11, 1, 1]'), ('eight', 8, '[21, 2, 2]'), ('nine', 9, '[31, 3, 3]'), 
                      ('ten', 10, '[41, 4, 4]'), ('eleven', 11, '[51, 5, 5]'), ('twelve', 12, '[61, 6, 6]');

--echo
--echo Vector distance ordering for reference:
explain
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 order by dis limit 100;
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 order by dis limit 100;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo open ended range 
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_char_keypart_1 > 'f' order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo bounded range
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_char_keypart_1 >= 'eleven' and pk_char_keypart_1 < 'two' order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo IN list
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_char_keypart_1 in ('one', 'three', 'five') order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo IN list with EQ condition
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_char_keypart_1 in ('one', 'three', 'five', 'seven', 'nine') and pk_bigint_keypart_2 <= 7 order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo IN list with LIKE clause
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_char_keypart_1 in ('one', 'five') or pk_bigint_keypart_2 in (2, 6) or pk_bigint_keypart_2 like '1%' order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

drop table t1;

--echo
--echo ----------------------------------------------------
--echo Test PK filtering with PK keys parts (CHAR, VARCHAR) 
--echo ----------------------------------------------------
--echo

CREATE TABLE t1 (   
  pk_char_keypart_1 CHAR (16) NOT NULL,
  pk_varchar_keypart_2 VARCHAR (10) NOT NULL,
  vector1 JSON NOT NULL FB_VECTOR_DIMENSION 3,
  PRIMARY KEY (pk_char_keypart_1, pk_varchar_keypart_2),
  INDEX vector_key_1(vector1) FB_VECTOR_INDEX_TYPE 'flat' 
);

insert into t1 values ('singles', 'one', '[1, 1, 1]'), ('singles', 'two', '[2, 2, 2]'), ('singles', 'three', '[3, 3, 3]'), 
                      ('singles', 'four', '[4, 4, 4]'), ('singles', 'five', '[5, 5, 5]'), ('singles', 'six', '[6, 6, 6]');

insert into t1 values ('singles', 'SEVEN', '[11, 1, 1]'), ('singles', 'EIGHT', '[21, 2, 2]'), ('singles', 'NINE', '[31, 3, 3]'), 
                      ('doubles', 'TEN', '[41, 4, 4]'), ('doubles', 'ELEVEN', '[51, 5, 5]'), ('doubles', 'TWELVE', '[61, 6, 6]');

--echo
--echo Vector distance ordering for reference:
explain
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 order by dis limit 100;
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 order by dis limit 100;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo open ended range 
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_char_keypart_1 > 'f' order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo bounded range
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_varchar_keypart_2 >= 'eleven' and pk_varchar_keypart_2 < 'two' order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo IN list
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_varchar_keypart_2 in ('one', 'three', 'five') order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo IN list with EQ condition
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_varchar_keypart_2 in ('one', 'three', 'five', 'seven', 'nine', 'eleven') and pk_char_keypart_1 like 'd%' order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

--echo
--echo IN list with LIKE clause
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_varchar_keypart_2 in ('one', 'five') or pk_char_keypart_1 = 'doubles' order by dis limit 10;

--echo
 
select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
  MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;

drop table t1;
