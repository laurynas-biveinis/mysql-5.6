disable_query_log;
disable_warnings;
DROP TABLE IF EXISTS t1;
enable_warnings;
enable_query_log;

source ../include/init_ivf.inc;

# 2 centroids
insert into VECTORDB_DATA values ('id1', 'metadata', 0, JSON_OBJECT('version', 1, 'nlist', 2)), ('id1', 'quantizer', 0, '[0, 0, 0, 0]'), ('id1', 'quantizer', 1, '[1, 1, 0, 0]');

CREATE TABLE t1 (
  id BIGINT NOT NULL PRIMARY KEY,
  vector1 JSON NOT NULL fb_vector_dimension 4,
  name varchar(64),
  value int,
  INDEX key1(vector1) FB_VECTOR_INDEX_TYPE 'ivfflat' FB_VECTOR_TRAINED_INDEX_TABLE 'VECTORDB_DATA' FB_VECTOR_TRAINED_INDEX_ID 'id1',
  INDEX key2(name),
  INDEX key3(value)
);

# insert 100 vectors close to centroid 0
insert into t1 (WITH RECURSIVE a(i) AS (SELECT 0 union all select i+1 from a where i < 99) SELECT i, json_array(i*0.0001, i*0.0001, 0, 0), concat('val', i), ABS(50-i) from a);
# insert 100 vectors close to centroid 1
insert into t1 (WITH RECURSIVE a(i) AS (SELECT 0 union all select i+1 from a where i < 99) SELECT i+1000, json_array(1+i*0.0001, 1-i*0.0001, 0, 0), concat('val', i+1000), ABS(50-i) from a);

# test order by vector distance when the flag fb_vector_use_index_scan is off versus on
explain select *, fb_vector_l2(vector1, '[0.3, 0.3]')  as dis from t1 order by dis limit 10;
select *, fb_vector_l2(vector1, '[0.3, 0.3]')  as dis from t1 order by dis limit 10;
SELECT NTOTAL, HIT, MIN_LIST_SIZE, MAX_LIST_SIZE, AVG_LIST_SIZE  FROM INFORMATION_SCHEMA.ROCKSDB_VECTOR_INDEX WHERE TABLE_NAME = 't1';
SET SESSION fb_vector_search_type = ITERATOR;
explain select *, fb_vector_l2(vector1, '[0.3, 0.3]')  as dis from t1 order by dis limit 10;
select *, fb_vector_l2(vector1, '[0.3, 0.3]')  as dis from t1 order by dis limit 10;
SELECT NTOTAL, HIT, MIN_LIST_SIZE, MAX_LIST_SIZE, AVG_LIST_SIZE  FROM INFORMATION_SCHEMA.ROCKSDB_VECTOR_INDEX WHERE TABLE_NAME = 't1';
SET SESSION fb_vector_search_type = KNN;

# test order by a integer column with index when the flag fb_vector_use_index_scan is off versus on
explain select * from t1 order by value limit 10;
select * from t1 order by value limit 10;
SET SESSION fb_vector_search_type = ITERATOR;
explain select * from t1 order by value limit 10;
select * from t1 order by value limit 10;
SET SESSION fb_vector_search_type = KNN;

# test order by a varchar column with index when the flag fb_vector_use_index_scan is off versus on
explain select * from t1 order by name limit 10;
select * from t1 order by name limit 10;
SET SESSION fb_vector_search_type = ITERATOR;
explain select * from t1 order by name limit 10;
select * from t1 order by name limit 10;
SET SESSION fb_vector_search_type = KNN;

# test order by multiple columns when the flag fb_vector_use_index_scan is off versus on
explain select * from t1 order by value, name limit 10;
select * from t1 order by value, name limit 10;
SET SESSION fb_vector_search_type = ITERATOR;
explain select * from t1 order by value, name limit 10;
select * from t1 order by value, name limit 10;
SET SESSION fb_vector_search_type = KNN;

# update the name of some records
update t1 set name = CONCAT(name, "aaa") where id in (97, 98, 99, 1097, 1098, 1099);
select * from t1 where id in (97, 98, 99, 1097, 1098, 1099);

# filter by name and order by distance using knn search
explain select *, fb_vector_l2(vector1, '[0.3, 0.3]')  as dis from t1 where name like '%aaa%' order by dis limit 6;
select *, fb_vector_l2(vector1, '[0.3, 0.3]')  as dis from t1 where name like '%aaa%' order by dis limit 6;
SELECT NTOTAL, HIT, MIN_LIST_SIZE, MAX_LIST_SIZE, AVG_LIST_SIZE  FROM INFORMATION_SCHEMA.ROCKSDB_VECTOR_INDEX WHERE TABLE_NAME = 't1';
SET SESSION fb_vector_search_type = ITERATOR;
explain select *, fb_vector_l2(vector1, '[0.3, 0.3]')  as dis from t1 where name like '%aaa%' order by dis limit 6;
select *, fb_vector_l2(vector1, '[0.3, 0.3]')  as dis from t1 where name like '%aaa%' order by dis limit 6;
SELECT NTOTAL, HIT, MIN_LIST_SIZE, MAX_LIST_SIZE, AVG_LIST_SIZE  FROM INFORMATION_SCHEMA.ROCKSDB_VECTOR_INDEX WHERE TABLE_NAME = 't1';
SET SESSION fb_vector_search_type = KNN;

# the rank of 98 should go down in next query
update t1 set vector1 = '[0.0097, 0.009, 0, 0]' where id = 98;

select *, fb_vector_l2(vector1, '[0.3, 0.3]')  as dis from t1 order by dis limit 10;
SELECT NTOTAL, HIT, MIN_LIST_SIZE, MAX_LIST_SIZE, AVG_LIST_SIZE  FROM INFORMATION_SCHEMA.ROCKSDB_VECTOR_INDEX WHERE TABLE_NAME = 't1';
SET SESSION fb_vector_search_type = ITERATOR;
select *, fb_vector_l2(vector1, '[0.3, 0.3]')  as dis from t1 order by dis limit 10;
SELECT NTOTAL, HIT, MIN_LIST_SIZE, MAX_LIST_SIZE, AVG_LIST_SIZE  FROM INFORMATION_SCHEMA.ROCKSDB_VECTOR_INDEX WHERE TABLE_NAME = 't1';
SET SESSION fb_vector_search_type = KNN;

# query by name and order by distance using knn search
explain select *, fb_vector_l2(vector1, '[0.3, 0.3]')  as dis from t1 where name like '%aaa%' order by dis limit 6;
select *, fb_vector_l2(vector1, '[0.3, 0.3]')  as dis from t1 where name like '%aaa%' order by dis limit 6;
SET SESSION fb_vector_search_type = ITERATOR;
explain select *, fb_vector_l2(vector1, '[0.3, 0.3]')  as dis from t1 where name like '%aaa%' order by dis limit 6;
select *, fb_vector_l2(vector1, '[0.3, 0.3]')  as dis from t1 where name like '%aaa%' order by dis limit 6;
SELECT NTOTAL, HIT, MIN_LIST_SIZE, MAX_LIST_SIZE, AVG_LIST_SIZE  FROM INFORMATION_SCHEMA.ROCKSDB_VECTOR_INDEX WHERE TABLE_NAME = 't1';
SET SESSION fb_vector_search_type = KNN;


# update pk
update t1 set id = 2000 where id = 98;
select *, fb_vector_l2(vector1, '[0.3, 0.3]')  as dis from t1 order by dis limit 10;
SET SESSION fb_vector_search_type = ITERATOR;
select *, fb_vector_l2(vector1, '[0.3, 0.3]')  as dis from t1 order by dis limit 10;
SET SESSION fb_vector_search_type = KNN;

# update both pk and value
update t1 set vector1 = '[0.0098, 0.0099, 0, 0]', id = 2001 where id = 2000;
select *, fb_vector_l2(vector1, '[0.3, 0.3]')  as dis from t1 order by dis limit 10;
SET SESSION fb_vector_search_type = ITERATOR;
select *, fb_vector_l2(vector1, '[0.3, 0.3]')  as dis from t1 order by dis limit 10;
SET SESSION fb_vector_search_type = KNN;

# 92 should be assigned to centroid 1 and disappear from query result
update t1 set vector1 = '[1.0001, 1, 0, 0]' where id = 92;

select *, fb_vector_l2(vector1, '[0.3, 0.3]')  as dis from t1 order by dis limit 10;
SELECT NTOTAL, HIT, MIN_LIST_SIZE, MAX_LIST_SIZE, AVG_LIST_SIZE  FROM INFORMATION_SCHEMA.ROCKSDB_VECTOR_INDEX WHERE TABLE_NAME = 't1';
SET SESSION fb_vector_search_type = ITERATOR;
select *, fb_vector_l2(vector1, '[0.3, 0.3]')  as dis from t1 order by dis limit 10;
SELECT NTOTAL, HIT, MIN_LIST_SIZE, MAX_LIST_SIZE, AVG_LIST_SIZE  FROM INFORMATION_SCHEMA.ROCKSDB_VECTOR_INDEX WHERE TABLE_NAME = 't1';
SET SESSION fb_vector_search_type = KNN;

echo;
echo delete vector from centroid 0;
delete from t1 where id = 99;

echo 99 should disappear from query result;
select *, fb_vector_l2(vector1, '[0.3, 0.3]')  as dis from t1 order by dis limit 10;
SELECT NTOTAL, HIT, MIN_LIST_SIZE, MAX_LIST_SIZE, AVG_LIST_SIZE  FROM INFORMATION_SCHEMA.ROCKSDB_VECTOR_INDEX WHERE TABLE_NAME = 't1';
SET SESSION fb_vector_search_type = ITERATOR;
select *, fb_vector_l2(vector1, '[0.3, 0.3]')  as dis from t1 order by dis limit 10;
SELECT NTOTAL, HIT, MIN_LIST_SIZE, MAX_LIST_SIZE, AVG_LIST_SIZE  FROM INFORMATION_SCHEMA.ROCKSDB_VECTOR_INDEX WHERE TABLE_NAME = 't1';
SET SESSION fb_vector_search_type = KNN;

echo;
echo results from centroid 1;
select *, fb_vector_l2(vector1, '[0.6, 0.6]')  as dis from t1 order by dis limit 10;
SELECT NTOTAL, HIT, MIN_LIST_SIZE, MAX_LIST_SIZE, AVG_LIST_SIZE  FROM INFORMATION_SCHEMA.ROCKSDB_VECTOR_INDEX WHERE TABLE_NAME = 't1';
SET SESSION fb_vector_search_type = ITERATOR;
select *, fb_vector_l2(vector1, '[0.6, 0.6]')  as dis from t1 order by dis limit 10;
SELECT NTOTAL, HIT, MIN_LIST_SIZE, MAX_LIST_SIZE, AVG_LIST_SIZE  FROM INFORMATION_SCHEMA.ROCKSDB_VECTOR_INDEX WHERE TABLE_NAME = 't1';
SET SESSION fb_vector_search_type = KNN;

echo;
echo delete vector from centroid 1;
delete from t1 where id = 1001;

echo 1001 should disappear from query result;
select *, fb_vector_l2(vector1, '[0.6, 0.6]')  as dis from t1 order by dis limit 10;
SELECT NTOTAL, HIT, MIN_LIST_SIZE, MAX_LIST_SIZE, AVG_LIST_SIZE  FROM INFORMATION_SCHEMA.ROCKSDB_VECTOR_INDEX WHERE TABLE_NAME = 't1';
SET SESSION fb_vector_search_type = ITERATOR;
select *, fb_vector_l2(vector1, '[0.6, 0.6]')  as dis from t1 order by dis limit 10;
SELECT NTOTAL, HIT, MIN_LIST_SIZE, MAX_LIST_SIZE, AVG_LIST_SIZE  FROM INFORMATION_SCHEMA.ROCKSDB_VECTOR_INDEX WHERE TABLE_NAME = 't1';
SET SESSION fb_vector_search_type = KNN;

# IP metric
--replace_regex /\(cost=[0-9. ]*/(/
EXPLAIN FORMAT=TREE
select *, fb_vector_ip(vector1, '[1, 0.9]') as dis from t1 order by dis desc limit 10;
select *, fb_vector_ip(vector1, '[1, 0.9]') as dis from t1 order by dis desc limit 10;
SELECT NTOTAL, HIT, MIN_LIST_SIZE, MAX_LIST_SIZE, AVG_LIST_SIZE  FROM INFORMATION_SCHEMA.ROCKSDB_VECTOR_INDEX WHERE TABLE_NAME = 't1';
SET SESSION fb_vector_search_type = ITERATOR;
--replace_regex /\(cost=[0-9. ]*/(/
EXPLAIN FORMAT=TREE
select *, fb_vector_ip(vector1, '[1, 0.9]') as dis from t1 order by dis desc limit 10;
select *, fb_vector_ip(vector1, '[1, 0.9]') as dis from t1 order by dis desc limit 10;
SELECT NTOTAL, HIT, MIN_LIST_SIZE, MAX_LIST_SIZE, AVG_LIST_SIZE  FROM INFORMATION_SCHEMA.ROCKSDB_VECTOR_INDEX WHERE TABLE_NAME = 't1';
SET SESSION fb_vector_search_type = KNN;

drop table t1;

source ../include/cleanup_ivf.inc;
