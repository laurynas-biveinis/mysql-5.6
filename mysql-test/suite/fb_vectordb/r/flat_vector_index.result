CREATE TABLE t1 (
id BIGINT NOT NULL PRIMARY KEY,
vector1 JSON NOT NULL fb_vector_dimension 3,
name varchar(64),
INDEX key1(vector1) FB_VECTOR_INDEX_TYPE 'flat'
);
insert into t1 values (1, '[1,2,3]', 'val1'), (2, '[2,22,31]', 'val2'), (3, '[10,6,5]', 'val3'), (4, '[3,9,4]', 'val4');
insert into t1 (WITH RECURSIVE a(i) AS (SELECT 0 union all select i+1 from a where i < 100) SELECT i+10, json_array(i+2, i+3, 1.4), concat('val', i+10) from a);
select *, fb_vector_l2(vector1, '[10, 6, 5]') as dis from t1 order by dis limit 10;
id	vector1	name	dis
3	[10, 6, 5]	val3	0
15	[7, 8, 1.4]	val15	25.959999084472656
16	[8, 9, 1.4]	val16	25.959999084472656
14	[6, 7, 1.4]	val14	29.959999084472656
17	[9, 10, 1.4]	val17	29.959999084472656
13	[5, 6, 1.4]	val13	37.959999084472656
18	[10, 11, 1.4]	val18	37.959999084472656
12	[4, 5, 1.4]	val12	49.959999084472656
19	[11, 12, 1.4]	val19	49.959999084472656
4	[3, 9, 4]	val4	59
SELECT NTOTAL, HIT FROM INFORMATION_SCHEMA.ROCKSDB_VECTOR_INDEX WHERE TABLE_NAME = 't1';
NTOTAL	HIT
105	1
update t1 set vector1 = '[9, 5, 2]' where id = 16;
select *, fb_vector_l2(vector1, '[10, 6, 5]') as dis from t1 order by dis limit 10;
id	vector1	name	dis
3	[10, 6, 5]	val3	0
16	[9, 5, 2]	val16	11
15	[7, 8, 1.4]	val15	25.959999084472656
14	[6, 7, 1.4]	val14	29.959999084472656
17	[9, 10, 1.4]	val17	29.959999084472656
13	[5, 6, 1.4]	val13	37.959999084472656
18	[10, 11, 1.4]	val18	37.959999084472656
12	[4, 5, 1.4]	val12	49.959999084472656
19	[11, 12, 1.4]	val19	49.959999084472656
4	[3, 9, 4]	val4	59
update t1 set id = 1024 where id = 16;
select *, fb_vector_l2(vector1, '[10, 6, 5]') as dis from t1 order by dis limit 10;
id	vector1	name	dis
3	[10, 6, 5]	val3	0
1024	[9, 5, 2]	val16	11
15	[7, 8, 1.4]	val15	25.959999084472656
14	[6, 7, 1.4]	val14	29.959999084472656
17	[9, 10, 1.4]	val17	29.959999084472656
13	[5, 6, 1.4]	val13	37.959999084472656
18	[10, 11, 1.4]	val18	37.959999084472656
12	[4, 5, 1.4]	val12	49.959999084472656
19	[11, 12, 1.4]	val19	49.959999084472656
4	[3, 9, 4]	val4	59
update t1 set id = 1025, vector1 = '[9, 5, 3]' where id = 1024;
select *, fb_vector_l2(vector1, '[10, 6, 5]') as dis from t1 order by dis limit 10;
id	vector1	name	dis
3	[10, 6, 5]	val3	0
1025	[9, 5, 3]	val16	6
15	[7, 8, 1.4]	val15	25.959999084472656
14	[6, 7, 1.4]	val14	29.959999084472656
17	[9, 10, 1.4]	val17	29.959999084472656
13	[5, 6, 1.4]	val13	37.959999084472656
18	[10, 11, 1.4]	val18	37.959999084472656
12	[4, 5, 1.4]	val12	49.959999084472656
19	[11, 12, 1.4]	val19	49.959999084472656
4	[3, 9, 4]	val4	59
update t1 set vector1='[7, 8, 1.5]' where name = 'val15';
select *, fb_vector_l2(vector1, '[10, 6, 5]') as dis from t1 order by dis limit 10;
id	vector1	name	dis
3	[10, 6, 5]	val3	0
1025	[9, 5, 3]	val16	6
15	[7, 8, 1.5]	val15	25.25
14	[6, 7, 1.4]	val14	29.959999084472656
17	[9, 10, 1.4]	val17	29.959999084472656
13	[5, 6, 1.4]	val13	37.959999084472656
18	[10, 11, 1.4]	val18	37.959999084472656
12	[4, 5, 1.4]	val12	49.959999084472656
19	[11, 12, 1.4]	val19	49.959999084472656
4	[3, 9, 4]	val4	59
delete from t1 where id = 12;
select *, fb_vector_l2(vector1, '[10, 6, 5]') as dis from t1 order by dis limit 10;
id	vector1	name	dis
3	[10, 6, 5]	val3	0
1025	[9, 5, 3]	val16	6
15	[7, 8, 1.5]	val15	25.25
14	[6, 7, 1.4]	val14	29.959999084472656
17	[9, 10, 1.4]	val17	29.959999084472656
13	[5, 6, 1.4]	val13	37.959999084472656
18	[10, 11, 1.4]	val18	37.959999084472656
19	[11, 12, 1.4]	val19	49.959999084472656
4	[3, 9, 4]	val4	59
11	[3, 4, 1.4]	val11	65.95999908447266
delete from t1 where name = 'val14';
select *, fb_vector_l2(vector1, '[10, 6, 5]') as dis from t1 order by dis limit 10;
id	vector1	name	dis
3	[10, 6, 5]	val3	0
1025	[9, 5, 3]	val16	6
15	[7, 8, 1.5]	val15	25.25
17	[9, 10, 1.4]	val17	29.959999084472656
13	[5, 6, 1.4]	val13	37.959999084472656
18	[10, 11, 1.4]	val18	37.959999084472656
19	[11, 12, 1.4]	val19	49.959999084472656
4	[3, 9, 4]	val4	59
11	[3, 4, 1.4]	val11	65.95999908447266
20	[12, 13, 1.4]	val20	65.95999908447266
SELECT NTOTAL, HIT FROM INFORMATION_SCHEMA.ROCKSDB_VECTOR_INDEX WHERE TABLE_NAME = 't1';
NTOTAL	HIT
103	7
select *, fb_vector_ip(vector1, '[10, 6, 5]') as dis from t1 order by dis desc limit 10;
id	vector1	name	dis
110	[102, 103, 1.4]	val110	1645
109	[101, 102, 1.4]	val109	1629
108	[100, 101, 1.4]	val108	1613
107	[99, 100, 1.4]	val107	1597
106	[98, 99, 1.4]	val106	1581
105	[97, 98, 1.4]	val105	1565
104	[96, 97, 1.4]	val104	1549
103	[95, 96, 1.4]	val103	1533
102	[94, 95, 1.4]	val102	1517
101	[93, 94, 1.4]	val101	1501
SELECT NTOTAL, HIT FROM INFORMATION_SCHEMA.ROCKSDB_VECTOR_INDEX WHERE TABLE_NAME = 't1';
NTOTAL	HIT
103	8

order by wrong direction should work, but it will not use vector index
select *, fb_vector_l2(vector1, '[10, 6, 5]') as dis from t1 order by dis desc limit 2;
id	vector1	name	dis
110	[102, 103, 1.4]	val110	17885.9609375
109	[101, 102, 1.4]	val109	17509.9609375
select *, fb_vector_ip(vector1, '[10, 6, 5]') as dis from t1 order by dis limit 2;
id	vector1	name	dis
1	[1, 2, 3]	val1	37
10	[2, 3, 1.4]	val10	45
SELECT HIT FROM INFORMATION_SCHEMA.ROCKSDB_VECTOR_INDEX WHERE TABLE_NAME = 't1';
HIT
8

delete from t1 where id > 4;

without limit should work
select *, fb_vector_l2(vector1, '[10, 6, 5]') as dis from t1 order by dis;
id	vector1	name	dis
3	[10, 6, 5]	val3	0
4	[3, 9, 4]	val4	59
1	[1, 2, 3]	val1	101
2	[2, 22, 31]	val2	996
SELECT HIT FROM INFORMATION_SCHEMA.ROCKSDB_VECTOR_INDEX WHERE TABLE_NAME = 't1';
HIT
9
drop table t1;

test cases when primary key contains varchar columns

CREATE TABLE t1 (
id BIGINT NOT NULL,
vector1 JSON NOT NULL fb_vector_dimension 3,
name varchar(64),
uid varchar(8),
primary key (name, id, uid),
INDEX key1(vector1) FB_VECTOR_INDEX_TYPE 'flat'
);
insert into t1 values (1, '[1,2,3]', 'val1', 'uid1'), (2, '[2,22,31]', 'val2', 'uid2'), (3, '[10,6,5]', 'val3', 'uid3'), (4, '[3,9,4]', 'val4', 'uid4');
insert into t1 (WITH RECURSIVE a(i) AS (SELECT 0 union all select i+1 from a where i < 100) SELECT i+10, json_array(i+2, i+3, 1.4), concat('val', i+10), concat('uid', i+10) from a);
select *, fb_vector_l2(vector1, '[10, 6, 5]') as dis from t1 order by dis limit 10;
id	vector1	name	uid	dis
3	[10, 6, 5]	val3	uid3	0
15	[7, 8, 1.4]	val15	uid15	25.959999084472656
16	[8, 9, 1.4]	val16	uid16	25.959999084472656
14	[6, 7, 1.4]	val14	uid14	29.959999084472656
17	[9, 10, 1.4]	val17	uid17	29.959999084472656
13	[5, 6, 1.4]	val13	uid13	37.959999084472656
18	[10, 11, 1.4]	val18	uid18	37.959999084472656
12	[4, 5, 1.4]	val12	uid12	49.959999084472656
19	[11, 12, 1.4]	val19	uid19	49.959999084472656
4	[3, 9, 4]	val4	uid4	59
SELECT NTOTAL, HIT FROM INFORMATION_SCHEMA.ROCKSDB_VECTOR_INDEX WHERE TABLE_NAME = 't1';
NTOTAL	HIT
105	1
drop table t1;

test blob column
CREATE TABLE t1 (
id BIGINT NOT NULL PRIMARY KEY,
blob1 BLOB NOT NULL fb_vector_dimension 3,
INDEX key1(blob1) FB_VECTOR_INDEX_TYPE 'flat'
);
insert into t1 values (1, FB_VECTOR_JSON_TO_BLOB('[1,2,3]')), (2, FB_VECTOR_JSON_TO_BLOB('[2,22,31]')), (3, FB_VECTOR_JSON_TO_BLOB('[10,6,5]')), (4, FB_VECTOR_JSON_TO_BLOB('[3,9,4]'));
update t1 set blob1 = FB_VECTOR_JSON_TO_BLOB('[9, 5, 2]') where id = 3;
select id, FB_VECTOR_BLOB_TO_JSON(blob1), fb_vector_l2(blob1, '[10, 6, 5]') as dis from t1 order by dis limit 10;
id	FB_VECTOR_BLOB_TO_JSON(blob1)	dis
3	[9.0, 5.0, 2.0]	11
4	[3.0, 9.0, 4.0]	59
1	[1.0, 2.0, 3.0]	101
2	[2.0, 22.0, 31.0]	996
select id, FB_VECTOR_BLOB_TO_JSON(blob1), fb_vector_ip(blob1, '[10, 6, 5]') as dis from t1 order by dis desc limit 10;
id	FB_VECTOR_BLOB_TO_JSON(blob1)	dis
2	[2.0, 22.0, 31.0]	307
3	[9.0, 5.0, 2.0]	130
4	[3.0, 9.0, 4.0]	104
1	[1.0, 2.0, 3.0]	37
select id, FB_VECTOR_BLOB_TO_JSON(blob1), fb_vector_l2(FB_VECTOR_NORMALIZE_L2(blob1), '[10, 6, 5]') as dis from t1 order by dis limit 10;
id	FB_VECTOR_BLOB_TO_JSON(blob1)	dis
3	[9.0, 5.0, 2.0]	137.20997619628906
4	[3.0, 9.0, 4.0]	141.79725646972656
1	[1.0, 2.0, 3.0]	142.22265625
2	[2.0, 22.0, 31.0]	145.8699951171875
FB_VECTOR_NORMALIZE_L2 does not change the value of blob buffer
select FB_VECTOR_BLOB_TO_JSON(blob1) from t1;
FB_VECTOR_BLOB_TO_JSON(blob1)
[1.0, 2.0, 3.0]
[2.0, 22.0, 31.0]
[9.0, 5.0, 2.0]
[3.0, 9.0, 4.0]
SELECT NTOTAL, HIT FROM INFORMATION_SCHEMA.ROCKSDB_VECTOR_INDEX WHERE TABLE_NAME = 't1';
NTOTAL	HIT
4	2
forbid the usage of FB_VECTOR_BLOB_TO_JSON() in FB_VECTOR_NORMALIZE_L2
select id, FB_VECTOR_NORMALIZE_L2(FB_VECTOR_BLOB_TO_JSON(blob1)) as dis from t1 order by dis limit 10;
ERROR HY000: Incorrect arguments to fb_vector_normalize_l2: please use blob item directly, no need to use FB_VECTOR_BLOB_TO_JSON
forbid the usage of FB_VECTOR_BLOB_TO_JSON() in fb_vector_l2
select id, fb_vector_l2(FB_VECTOR_BLOB_TO_JSON(blob1), '[10, 6, 5]') as dis from t1 order by dis limit 10;
ERROR HY000: Incorrect arguments to fb_vector_l2: please use blob item directly, no need to use FB_VECTOR_BLOB_TO_JSON
forbid the usage of FB_VECTOR_BLOB_TO_JSON() in fb_vector_ip
select id, fb_vector_ip(FB_VECTOR_BLOB_TO_JSON(blob1), '[10, 6, 5]') as dis from t1 order by dis limit 10;
ERROR HY000: Incorrect arguments to fb_vector_ip: please use blob item directly, no need to use FB_VECTOR_BLOB_TO_JSON
drop table t1;
