
----------------------------------------------
Test PK filtering with single PK BIGINT column
----------------------------------------------

CREATE TABLE t1 (   
pk BIGINT NOT NULL PRIMARY KEY,
vector1 JSON NOT NULL FB_VECTOR_DIMENSION 3,
INDEX vector_key_1(vector1) FB_VECTOR_INDEX_TYPE 'flat' 
);
insert into t1 values (1, '[1, 1, 1]'), (2, '[2, 2, 2]'), (3, '[3, 3, 3]'), 
(4, '[4, 4, 4]'), (5, '[5, 5, 5]'), (6, '[6, 6, 6]');
insert into t1 values (7, '[11, 1, 1]'), (8, '[21, 2, 2]'), (9, '[31, 3, 3]'), 
(10, '[41, 4, 4]'), (11, '[51, 5, 5]'), (12, '[61, 6, 6]');

Record value of fb_vector_index_cond_pushdown
SELECT @@SESSION.fb_vector_index_cond_pushdown;
@@SESSION.fb_vector_index_cond_pushdown
1

Vector distance ordering for reference:
explain
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 order by dis limit 100;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	index	NULL	vector_key_1	65535	NULL	1	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`pk` AS `pk`,`test`.`t1`.`vector1` AS `vector1`,fb_vector_l2(`test`.`t1`.`vector1`,'[12.5, 3.5, 2.5]') AS `dis` from `test`.`t1` order by `dis` limit 100
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 order by dis limit 100;
pk	vector1	dis
7	[11, 1, 1]	10.75
6	[6, 6, 6]	60.75
5	[5, 5, 5]	64.75
4	[4, 4, 4]	74.75
8	[21, 2, 2]	74.75
3	[3, 3, 3]	90.75
2	[2, 2, 2]	112.75
1	[1, 1, 1]	140.75
9	[31, 3, 3]	342.75
10	[41, 4, 4]	814.75
11	[51, 5, 5]	1490.75
12	[61, 6, 6]	2370.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	12	12

open ended range 
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk > 4 order by dis limit 10;
pk	vector1	dis
7	[11, 1, 1]	10.75
6	[6, 6, 6]	60.75
5	[5, 5, 5]	64.75
8	[21, 2, 2]	74.75
9	[31, 3, 3]	342.75
10	[41, 4, 4]	814.75
11	[51, 5, 5]	1490.75
12	[61, 6, 6]	2370.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	8	8

bounded range
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk >= 5 and pk < 10 order by dis limit 10;
pk	vector1	dis
7	[11, 1, 1]	10.75
6	[6, 6, 6]	60.75
5	[5, 5, 5]	64.75
8	[21, 2, 2]	74.75
9	[31, 3, 3]	342.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	5	5

IN list
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk in (1, 3, 5) order by dis limit 10;
pk	vector1	dis
5	[5, 5, 5]	64.75
3	[3, 3, 3]	90.75
1	[1, 1, 1]	140.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	3	3

IN list with EQ condition
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk in (1, 5) or pk = '3' order by dis limit 10;
pk	vector1	dis
5	[5, 5, 5]	64.75
3	[3, 3, 3]	90.75
1	[1, 1, 1]	140.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	3	3

IN list with LIKE clause
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk in (1, 5) or pk like '1%' order by dis limit 10;
pk	vector1	dis
5	[5, 5, 5]	64.75
1	[1, 1, 1]	140.75
10	[41, 4, 4]	814.75
11	[51, 5, 5]	1490.75
12	[61, 6, 6]	2370.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	5	5

Test EXPLAIN FORMAT=TREE

EXPLAIN FORMAT=TREE
SELECT *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk in (1, 5) or pk like '1%' order by dis limit 10;
EXPLAIN
-> Limit: 10 row(s)  (rows=1)
    -> Filter: ((t1.pk in (1,5)) or (t1.pk like '1%'))  (rows=1)
        -> Ordered vector index scan on t1 using vector_key_1, with index condition: ((t1.pk in (1,5)) or (t1.pk like '1%'))  (rows=1)


Test EXPLAIN FORMAT=JSON

EXPLAIN FORMAT=JSON
SELECT *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk in (1, 5) or pk like '1%' order by dis limit 10;
EXPLAIN
{
  "query_block": {
    "select_id": 1,
    "cost_info": {
      "query_cost":
    },
    "ordering_operation": {
      "using_filesort": false,
      "table": {
        "table_name": "t1",
        "access_type": "index",
        "possible_keys": [
          "PRIMARY"
        ],
        "key": "vector_key_1",
        "used_key_parts": [
          "vector1"
        ],
        "key_length": "65535",
        "rows_examined_per_scan": 1,
        "rows_produced_per_join": 1,
        "filtered": "100.00",
        "cost_info": {
          "read_cost":
          "eval_cost":
          "prefix_cost":
          "data_read_per_join": "24"
        },
        "used_columns": [
          "pk",
          "vector1"
        ],
        "attached_condition": "((`test`.`t1`.`pk` in (1,5)) or (`test`.`t1`.`pk` like '1%'))"
      }
    }
  }
}
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`pk` AS `pk`,`test`.`t1`.`vector1` AS `vector1`,fb_vector_l2(`test`.`t1`.`vector1`,'[12.5, 3.5, 2.5]') AS `dis` from `test`.`t1` where ((`test`.`t1`.`pk` in (1,5)) or (`test`.`t1`.`pk` like '1%')) order by `dis` limit 10
drop table t1;

--------------------------------------------------
Test PK filtering with PK keys parts (BIGINT, INT) 
--------------------------------------------------

CREATE TABLE t1 (   
pk_keypart_1 BIGINT NOT NULL,
pk_keypart_2 INT NOT NULL,
vector1 JSON NOT NULL FB_VECTOR_DIMENSION 3,
PRIMARY KEY(pk_keypart_1, pk_keypart_2),
INDEX vector_key_1(vector1) FB_VECTOR_INDEX_TYPE 'flat' 
);
insert into t1 values (1, 11, '[1, 1, 1]'), (2, 11, '[2, 2, 2]'), (3, 11, '[3, 3, 3]'), 
(4, 11, '[4, 4, 4]'), (5, 11, '[5, 5, 5]'), (6, 11, '[6, 6, 6]');
insert into t1 values (7, 112, '[11, 1, 1]'), (8, 112, '[21, 2, 2]'), (9, 112, '[31, 3, 3]'), 
(10, 112, '[41, 4, 4]'), (11, 112, '[51, 5, 5]'), (12, 112, '[61, 6, 6]');

Vector distance ordering for reference:
explain
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 order by dis limit 100;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	index	NULL	vector_key_1	65535	NULL	1	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`pk_keypart_1` AS `pk_keypart_1`,`test`.`t1`.`pk_keypart_2` AS `pk_keypart_2`,`test`.`t1`.`vector1` AS `vector1`,fb_vector_l2(`test`.`t1`.`vector1`,'[12.5, 3.5, 2.5]') AS `dis` from `test`.`t1` order by `dis` limit 100
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 order by dis limit 100;
pk_keypart_1	pk_keypart_2	vector1	dis
7	112	[11, 1, 1]	10.75
6	11	[6, 6, 6]	60.75
5	11	[5, 5, 5]	64.75
4	11	[4, 4, 4]	74.75
8	112	[21, 2, 2]	74.75
3	11	[3, 3, 3]	90.75
2	11	[2, 2, 2]	112.75
1	11	[1, 1, 1]	140.75
9	112	[31, 3, 3]	342.75
10	112	[41, 4, 4]	814.75
11	112	[51, 5, 5]	1490.75
12	112	[61, 6, 6]	2370.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	12	12

open ended range 
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_keypart_1 > 4 order by dis limit 10;
pk_keypart_1	pk_keypart_2	vector1	dis
7	112	[11, 1, 1]	10.75
6	11	[6, 6, 6]	60.75
5	11	[5, 5, 5]	64.75
8	112	[21, 2, 2]	74.75
9	112	[31, 3, 3]	342.75
10	112	[41, 4, 4]	814.75
11	112	[51, 5, 5]	1490.75
12	112	[61, 6, 6]	2370.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	8	8

bounded range
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_keypart_1 >= 5 and pk_keypart_1 < 10 order by dis limit 10;
pk_keypart_1	pk_keypart_2	vector1	dis
7	112	[11, 1, 1]	10.75
6	11	[6, 6, 6]	60.75
5	11	[5, 5, 5]	64.75
8	112	[21, 2, 2]	74.75
9	112	[31, 3, 3]	342.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	5	5

IN list
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_keypart_1 in (1, 3, 5) order by dis limit 10;
pk_keypart_1	pk_keypart_2	vector1	dis
5	11	[5, 5, 5]	64.75
3	11	[3, 3, 3]	90.75
1	11	[1, 1, 1]	140.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	3	3

IN list with EQ condition
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_keypart_1 in (1, 5) or pk_keypart_1 = '3' order by dis limit 10;
pk_keypart_1	pk_keypart_2	vector1	dis
5	11	[5, 5, 5]	64.75
3	11	[3, 3, 3]	90.75
1	11	[1, 1, 1]	140.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	3	3

IN list with LIKE clause
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_keypart_1 in (1, 5) or pk_keypart_1 like '1%' order by dis limit 10;
pk_keypart_1	pk_keypart_2	vector1	dis
5	11	[5, 5, 5]	64.75
1	11	[1, 1, 1]	140.75
10	112	[41, 4, 4]	814.75
11	112	[51, 5, 5]	1490.75
12	112	[61, 6, 6]	2370.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	5	5

Filter on pk_keypart_2 EQ condition (negative test)
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_keypart_2 = '115'  order by dis limit 10;
pk_keypart_1	pk_keypart_2	vector1	dis

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	0	0

Filter on pk_keypart_2 through IN list 
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_keypart_2 in (11, 15)  order by dis limit 10;
pk_keypart_1	pk_keypart_2	vector1	dis
6	11	[6, 6, 6]	60.75
5	11	[5, 5, 5]	64.75
4	11	[4, 4, 4]	74.75
3	11	[3, 3, 3]	90.75
2	11	[2, 2, 2]	112.75
1	11	[1, 1, 1]	140.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	6	6

Filter on pk_keypart_1 LIKE clause and pk_keypart_2 open range condition
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_keypart_2 > 20 and pk_keypart_1 like '1%' order by dis limit 10;
pk_keypart_1	pk_keypart_2	vector1	dis
10	112	[41, 4, 4]	814.75
11	112	[51, 5, 5]	1490.75
12	112	[61, 6, 6]	2370.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	3	3

Filter on pk_keypart_1 bounded range condition and pk_keypart_2 LIKE clause
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_keypart_1 > 3 and pk_keypart_1 <= 10 and  pk_keypart_2 like '%2' order by dis limit 10;
pk_keypart_1	pk_keypart_2	vector1	dis
7	112	[11, 1, 1]	10.75
8	112	[21, 2, 2]	74.75
9	112	[31, 3, 3]	342.75
10	112	[41, 4, 4]	814.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	4	4

Turn PK pre-filtering OFF and check results
SELECT @@SESSION.fb_vector_index_cond_pushdown;
@@SESSION.fb_vector_index_cond_pushdown
1
SET @@SESSION.fb_vector_index_cond_pushdown = false;
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_keypart_2 > 20 and pk_keypart_1 like '1%' order by dis limit 10;
pk_keypart_1	pk_keypart_2	vector1	dis
10	112	[41, 4, 4]	814.75
11	112	[51, 5, 5]	1490.75
12	112	[61, 6, 6]	2370.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	12	12

Turn PK pre-filtering ON through query hint and check results
SELECT @@SESSION.fb_vector_index_cond_pushdown;
@@SESSION.fb_vector_index_cond_pushdown
0
select /*+ SET_VAR(fb_vector_index_cond_pushdown=ON) */ *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_keypart_2 > 20 and pk_keypart_1 like '1%' order by dis limit 10;
pk_keypart_1	pk_keypart_2	vector1	dis
10	112	[41, 4, 4]	814.75
11	112	[51, 5, 5]	1490.75
12	112	[61, 6, 6]	2370.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	3	3
SET @@SESSION.fb_vector_index_cond_pushdown = true;

Test EXPLAIN FORMAT=TREE

EXPLAIN FORMAT=TREE
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_keypart_2 > 20 and pk_keypart_1 like '1%' order by dis limit 10;
EXPLAIN
-> Limit: 10 row(s)  (rows=1)
    -> Filter: ((t1.pk_keypart_2 > 20) and (t1.pk_keypart_1 like '1%'))  (rows=1)
        -> Ordered vector index scan on t1 using vector_key_1, with index condition: ((t1.pk_keypart_2 > 20) and (t1.pk_keypart_1 like '1%'))  (rows=1)


Test EXPLAIN FORMAT=JSON

EXPLAIN FORMAT=JSON
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_keypart_2 > 20 and pk_keypart_1 like '1%' order by dis limit 10;
EXPLAIN
{
  "query_block": {
    "select_id": 1,
    "cost_info": {
      "query_cost":
    },
    "ordering_operation": {
      "using_filesort": false,
      "table": {
        "table_name": "t1",
        "access_type": "index",
        "possible_keys": [
          "PRIMARY"
        ],
        "key": "vector_key_1",
        "used_key_parts": [
          "vector1"
        ],
        "key_length": "65535",
        "rows_examined_per_scan": 1,
        "rows_produced_per_join": 1,
        "filtered": "100.00",
        "cost_info": {
          "read_cost":
          "eval_cost":
          "prefix_cost":
          "data_read_per_join": "32"
        },
        "used_columns": [
          "pk_keypart_1",
          "pk_keypart_2",
          "vector1"
        ],
        "attached_condition": "((`test`.`t1`.`pk_keypart_2` > 20) and (`test`.`t1`.`pk_keypart_1` like '1%'))"
      }
    }
  }
}
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`pk_keypart_1` AS `pk_keypart_1`,`test`.`t1`.`pk_keypart_2` AS `pk_keypart_2`,`test`.`t1`.`vector1` AS `vector1`,fb_vector_l2(`test`.`t1`.`vector1`,'[12.5, 3.5, 2.5]') AS `dis` from `test`.`t1` where ((`test`.`t1`.`pk_keypart_2` > 20) and (`test`.`t1`.`pk_keypart_1` like '1%')) order by `dis` limit 10
drop table t1;

--------------------------------------------
Test PK filtering with single PK CHAR column 
--------------------------------------------

CREATE TABLE t1 (   
pk_char CHAR (16) NOT NULL PRIMARY KEY,
vector1 JSON NOT NULL FB_VECTOR_DIMENSION 3,
INDEX vector_key_1(vector1) FB_VECTOR_INDEX_TYPE 'flat' 
);
insert into t1 values ('one', '[1, 1, 1]'), ('two', '[2, 2, 2]'), ('three', '[3, 3, 3]'), 
('four', '[4, 4, 4]'), ('five', '[5, 5, 5]'), ('six', '[6, 6, 6]');
insert into t1 values ('seven', '[11, 1, 1]'), ('eight', '[21, 2, 2]'), ('nine', '[31, 3, 3]'), 
('ten', '[41, 4, 4]'), ('eleven', '[51, 5, 5]'), ('twelve', '[61, 6, 6]');

Vector distance ordering for reference:
explain
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 order by dis limit 100;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	index	NULL	vector_key_1	65535	NULL	1	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`pk_char` AS `pk_char`,`test`.`t1`.`vector1` AS `vector1`,fb_vector_l2(`test`.`t1`.`vector1`,'[12.5, 3.5, 2.5]') AS `dis` from `test`.`t1` order by `dis` limit 100
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 order by dis limit 100;
pk_char	vector1	dis
seven	[11, 1, 1]	10.75
six	[6, 6, 6]	60.75
five	[5, 5, 5]	64.75
eight	[21, 2, 2]	74.75
four	[4, 4, 4]	74.75
three	[3, 3, 3]	90.75
two	[2, 2, 2]	112.75
one	[1, 1, 1]	140.75
nine	[31, 3, 3]	342.75
ten	[41, 4, 4]	814.75
eleven	[51, 5, 5]	1490.75
twelve	[61, 6, 6]	2370.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	12	12

open ended range 
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_char > 'f' order by dis limit 10;
pk_char	vector1	dis
seven	[11, 1, 1]	10.75
six	[6, 6, 6]	60.75
five	[5, 5, 5]	64.75
four	[4, 4, 4]	74.75
three	[3, 3, 3]	90.75
two	[2, 2, 2]	112.75
one	[1, 1, 1]	140.75
nine	[31, 3, 3]	342.75
ten	[41, 4, 4]	814.75
twelve	[61, 6, 6]	2370.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	10	10

bounded range
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_char >= 'eleven' and pk_char < 'two' order by dis limit 10;
pk_char	vector1	dis
seven	[11, 1, 1]	10.75
six	[6, 6, 6]	60.75
five	[5, 5, 5]	64.75
four	[4, 4, 4]	74.75
three	[3, 3, 3]	90.75
one	[1, 1, 1]	140.75
nine	[31, 3, 3]	342.75
ten	[41, 4, 4]	814.75
eleven	[51, 5, 5]	1490.75
twelve	[61, 6, 6]	2370.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	10	10

IN list
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_char in ('one', 'three', 'five') order by dis limit 10;
pk_char	vector1	dis
five	[5, 5, 5]	64.75
three	[3, 3, 3]	90.75
one	[1, 1, 1]	140.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	3	3

IN list with EQ condition
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_char in ('one', 'five') or pk_char = 'three' order by dis limit 10;
pk_char	vector1	dis
five	[5, 5, 5]	64.75
three	[3, 3, 3]	90.75
one	[1, 1, 1]	140.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	3	3

IN list with LIKE clause
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_char in ('one', 'five') or pk_char like 'e%' order by dis limit 10;
pk_char	vector1	dis
five	[5, 5, 5]	64.75
eight	[21, 2, 2]	74.75
one	[1, 1, 1]	140.75
eleven	[51, 5, 5]	1490.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	4	4
drop table t1;

-----------------------------------------------
Test PK filtering with single PK VARCHAR column 
-----------------------------------------------

CREATE TABLE t1 (   
pk_varchar VARCHAR (16) NOT NULL PRIMARY KEY,
vector1 JSON NOT NULL FB_VECTOR_DIMENSION 3,
INDEX vector_key_1(vector1) FB_VECTOR_INDEX_TYPE 'flat' 
);
insert into t1 values ('one', '[1, 1, 1]'), ('two', '[2, 2, 2]'), ('three', '[3, 3, 3]'), 
('four', '[4, 4, 4]'), ('five', '[5, 5, 5]'), ('six', '[6, 6, 6]');
insert into t1 values ('seven', '[11, 1, 1]'), ('eight', '[21, 2, 2]'), ('nine', '[31, 3, 3]'), 
('ten', '[41, 4, 4]'), ('eleven', '[51, 5, 5]'), ('twelve', '[61, 6, 6]');

Vector distance ordering for reference:
explain
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 order by dis limit 100;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	index	NULL	vector_key_1	65535	NULL	1	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`pk_varchar` AS `pk_varchar`,`test`.`t1`.`vector1` AS `vector1`,fb_vector_l2(`test`.`t1`.`vector1`,'[12.5, 3.5, 2.5]') AS `dis` from `test`.`t1` order by `dis` limit 100
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 order by dis limit 100;
pk_varchar	vector1	dis
seven	[11, 1, 1]	10.75
six	[6, 6, 6]	60.75
five	[5, 5, 5]	64.75
eight	[21, 2, 2]	74.75
four	[4, 4, 4]	74.75
three	[3, 3, 3]	90.75
two	[2, 2, 2]	112.75
one	[1, 1, 1]	140.75
nine	[31, 3, 3]	342.75
ten	[41, 4, 4]	814.75
eleven	[51, 5, 5]	1490.75
twelve	[61, 6, 6]	2370.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	12	12

open ended range 
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_varchar > 'f' order by dis limit 10;
pk_varchar	vector1	dis
seven	[11, 1, 1]	10.75
six	[6, 6, 6]	60.75
five	[5, 5, 5]	64.75
four	[4, 4, 4]	74.75
three	[3, 3, 3]	90.75
two	[2, 2, 2]	112.75
one	[1, 1, 1]	140.75
nine	[31, 3, 3]	342.75
ten	[41, 4, 4]	814.75
twelve	[61, 6, 6]	2370.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	10	10

bounded range
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_varchar >= 'eleven' and pk_varchar < 'two' order by dis limit 10;
pk_varchar	vector1	dis
seven	[11, 1, 1]	10.75
six	[6, 6, 6]	60.75
five	[5, 5, 5]	64.75
four	[4, 4, 4]	74.75
three	[3, 3, 3]	90.75
one	[1, 1, 1]	140.75
nine	[31, 3, 3]	342.75
ten	[41, 4, 4]	814.75
eleven	[51, 5, 5]	1490.75
twelve	[61, 6, 6]	2370.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	10	10

IN list
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_varchar in ('one', 'three', 'five') order by dis limit 10;
pk_varchar	vector1	dis
five	[5, 5, 5]	64.75
three	[3, 3, 3]	90.75
one	[1, 1, 1]	140.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	3	3

IN list with EQ condition
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_varchar in ('one', 'five') or pk_varchar = 'three' order by dis limit 10;
pk_varchar	vector1	dis
five	[5, 5, 5]	64.75
three	[3, 3, 3]	90.75
one	[1, 1, 1]	140.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	3	3

IN list with LIKE clause
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_varchar in ('one', 'five') or pk_varchar like 'e%' order by dis limit 10;
pk_varchar	vector1	dis
five	[5, 5, 5]	64.75
eight	[21, 2, 2]	74.75
one	[1, 1, 1]	140.75
eleven	[51, 5, 5]	1490.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	4	4
drop table t1;

---------------------------------------------------
Test PK filtering with PK keys parts (CHAR, BIGINT) 
---------------------------------------------------

CREATE TABLE t1 (   
pk_char_keypart_1 CHAR (16) NOT NULL,
pk_bigint_keypart_2 BIGINT NOT NULL,
vector1 JSON NOT NULL FB_VECTOR_DIMENSION 3,
PRIMARY KEY (pk_char_keypart_1, pk_bigint_keypart_2),
INDEX vector_key_1(vector1) FB_VECTOR_INDEX_TYPE 'flat' 
);
insert into t1 values ('one', 1, '[1, 1, 1]'), ('two', 2, '[2, 2, 2]'), ('three', 3, '[3, 3, 3]'), 
('four', 4, '[4, 4, 4]'), ('five', 5, '[5, 5, 5]'), ('six', 6, '[6, 6, 6]');
insert into t1 values ('seven', 7, '[11, 1, 1]'), ('eight', 8, '[21, 2, 2]'), ('nine', 9, '[31, 3, 3]'), 
('ten', 10, '[41, 4, 4]'), ('eleven', 11, '[51, 5, 5]'), ('twelve', 12, '[61, 6, 6]');

Vector distance ordering for reference:
explain
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 order by dis limit 100;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	index	NULL	vector_key_1	65535	NULL	1	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`pk_char_keypart_1` AS `pk_char_keypart_1`,`test`.`t1`.`pk_bigint_keypart_2` AS `pk_bigint_keypart_2`,`test`.`t1`.`vector1` AS `vector1`,fb_vector_l2(`test`.`t1`.`vector1`,'[12.5, 3.5, 2.5]') AS `dis` from `test`.`t1` order by `dis` limit 100
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 order by dis limit 100;
pk_char_keypart_1	pk_bigint_keypart_2	vector1	dis
seven	7	[11, 1, 1]	10.75
six	6	[6, 6, 6]	60.75
five	5	[5, 5, 5]	64.75
eight	8	[21, 2, 2]	74.75
four	4	[4, 4, 4]	74.75
three	3	[3, 3, 3]	90.75
two	2	[2, 2, 2]	112.75
one	1	[1, 1, 1]	140.75
nine	9	[31, 3, 3]	342.75
ten	10	[41, 4, 4]	814.75
eleven	11	[51, 5, 5]	1490.75
twelve	12	[61, 6, 6]	2370.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	12	12

open ended range 
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_char_keypart_1 > 'f' order by dis limit 10;
pk_char_keypart_1	pk_bigint_keypart_2	vector1	dis
seven	7	[11, 1, 1]	10.75
six	6	[6, 6, 6]	60.75
five	5	[5, 5, 5]	64.75
four	4	[4, 4, 4]	74.75
three	3	[3, 3, 3]	90.75
two	2	[2, 2, 2]	112.75
one	1	[1, 1, 1]	140.75
nine	9	[31, 3, 3]	342.75
ten	10	[41, 4, 4]	814.75
twelve	12	[61, 6, 6]	2370.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	10	10

bounded range
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_char_keypart_1 >= 'eleven' and pk_char_keypart_1 < 'two' order by dis limit 10;
pk_char_keypart_1	pk_bigint_keypart_2	vector1	dis
seven	7	[11, 1, 1]	10.75
six	6	[6, 6, 6]	60.75
five	5	[5, 5, 5]	64.75
four	4	[4, 4, 4]	74.75
three	3	[3, 3, 3]	90.75
one	1	[1, 1, 1]	140.75
nine	9	[31, 3, 3]	342.75
ten	10	[41, 4, 4]	814.75
eleven	11	[51, 5, 5]	1490.75
twelve	12	[61, 6, 6]	2370.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	10	10

IN list
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_char_keypart_1 in ('one', 'three', 'five') order by dis limit 10;
pk_char_keypart_1	pk_bigint_keypart_2	vector1	dis
five	5	[5, 5, 5]	64.75
three	3	[3, 3, 3]	90.75
one	1	[1, 1, 1]	140.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	3	3

IN list with EQ condition
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_char_keypart_1 in ('one', 'three', 'five', 'seven', 'nine') and pk_bigint_keypart_2 <= 7 order by dis limit 10;
pk_char_keypart_1	pk_bigint_keypart_2	vector1	dis
seven	7	[11, 1, 1]	10.75
five	5	[5, 5, 5]	64.75
three	3	[3, 3, 3]	90.75
one	1	[1, 1, 1]	140.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	4	4

IN list with LIKE clause
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_char_keypart_1 in ('one', 'five') or pk_bigint_keypart_2 in (2, 6) or pk_bigint_keypart_2 like '1%' order by dis limit 10;
pk_char_keypart_1	pk_bigint_keypart_2	vector1	dis
six	6	[6, 6, 6]	60.75
five	5	[5, 5, 5]	64.75
two	2	[2, 2, 2]	112.75
one	1	[1, 1, 1]	140.75
ten	10	[41, 4, 4]	814.75
eleven	11	[51, 5, 5]	1490.75
twelve	12	[61, 6, 6]	2370.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	7	7

Test EXPLAIN FORMAT=TREE

EXPLAIN FORMAT=TREE
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_char_keypart_1 in ('one', 'five') or pk_bigint_keypart_2 in (2, 6) or pk_bigint_keypart_2 like '1%' order by dis limit 10;
EXPLAIN
-> Limit: 10 row(s)  (rows=1)
    -> Filter: ((t1.pk_char_keypart_1 in ('one','five')) or (t1.pk_bigint_keypart_2 in (2,6)) or (t1.pk_bigint_keypart_2 like '1%'))  (rows=1)
        -> Ordered vector index scan on t1 using vector_key_1, with index condition: ((t1.pk_char_keypart_1 in ('one','five')) or (t1.pk_bigint_keypart_2 in (2,6)) or (t1.pk_bigint_keypart_2 like '1%'))  (rows=1)

drop table t1;

----------------------------------------------------
Test PK filtering with PK keys parts (CHAR, VARCHAR) 
----------------------------------------------------

CREATE TABLE t1 (   
pk_char_keypart_1 CHAR (16) NOT NULL,
pk_varchar_keypart_2 VARCHAR (10) NOT NULL,
vector1 JSON NOT NULL FB_VECTOR_DIMENSION 3,
PRIMARY KEY (pk_char_keypart_1, pk_varchar_keypart_2),
INDEX vector_key_1(vector1) FB_VECTOR_INDEX_TYPE 'flat' 
);
insert into t1 values ('singles', 'one', '[1, 1, 1]'), ('singles', 'two', '[2, 2, 2]'), ('singles', 'three', '[3, 3, 3]'), 
('singles', 'four', '[4, 4, 4]'), ('singles', 'five', '[5, 5, 5]'), ('singles', 'six', '[6, 6, 6]');
insert into t1 values ('singles', 'SEVEN', '[11, 1, 1]'), ('singles', 'EIGHT', '[21, 2, 2]'), ('singles', 'NINE', '[31, 3, 3]'), 
('doubles', 'TEN', '[41, 4, 4]'), ('doubles', 'ELEVEN', '[51, 5, 5]'), ('doubles', 'TWELVE', '[61, 6, 6]');

Vector distance ordering for reference:
explain
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 order by dis limit 100;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	index	NULL	vector_key_1	65535	NULL	1	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`pk_char_keypart_1` AS `pk_char_keypart_1`,`test`.`t1`.`pk_varchar_keypart_2` AS `pk_varchar_keypart_2`,`test`.`t1`.`vector1` AS `vector1`,fb_vector_l2(`test`.`t1`.`vector1`,'[12.5, 3.5, 2.5]') AS `dis` from `test`.`t1` order by `dis` limit 100
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 order by dis limit 100;
pk_char_keypart_1	pk_varchar_keypart_2	vector1	dis
singles	SEVEN	[11, 1, 1]	10.75
singles	six	[6, 6, 6]	60.75
singles	five	[5, 5, 5]	64.75
singles	EIGHT	[21, 2, 2]	74.75
singles	four	[4, 4, 4]	74.75
singles	three	[3, 3, 3]	90.75
singles	two	[2, 2, 2]	112.75
singles	one	[1, 1, 1]	140.75
singles	NINE	[31, 3, 3]	342.75
doubles	TEN	[41, 4, 4]	814.75
doubles	ELEVEN	[51, 5, 5]	1490.75
doubles	TWELVE	[61, 6, 6]	2370.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	12	12

open ended range 
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_char_keypart_1 > 'f' order by dis limit 10;
pk_char_keypart_1	pk_varchar_keypart_2	vector1	dis
singles	SEVEN	[11, 1, 1]	10.75
singles	six	[6, 6, 6]	60.75
singles	five	[5, 5, 5]	64.75
singles	EIGHT	[21, 2, 2]	74.75
singles	four	[4, 4, 4]	74.75
singles	three	[3, 3, 3]	90.75
singles	two	[2, 2, 2]	112.75
singles	one	[1, 1, 1]	140.75
singles	NINE	[31, 3, 3]	342.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	9	9

bounded range
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_varchar_keypart_2 >= 'eleven' and pk_varchar_keypart_2 < 'two' order by dis limit 10;
pk_char_keypart_1	pk_varchar_keypart_2	vector1	dis
singles	SEVEN	[11, 1, 1]	10.75
singles	six	[6, 6, 6]	60.75
singles	five	[5, 5, 5]	64.75
singles	four	[4, 4, 4]	74.75
singles	three	[3, 3, 3]	90.75
singles	one	[1, 1, 1]	140.75
singles	NINE	[31, 3, 3]	342.75
doubles	TEN	[41, 4, 4]	814.75
doubles	ELEVEN	[51, 5, 5]	1490.75
doubles	TWELVE	[61, 6, 6]	2370.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	10	10

IN list
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_varchar_keypart_2 in ('one', 'three', 'five') order by dis limit 10;
pk_char_keypart_1	pk_varchar_keypart_2	vector1	dis
singles	five	[5, 5, 5]	64.75
singles	three	[3, 3, 3]	90.75
singles	one	[1, 1, 1]	140.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	3	3

IN list with EQ condition
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_varchar_keypart_2 in ('one', 'three', 'five', 'seven', 'nine', 'eleven') and pk_char_keypart_1 like 'd%' order by dis limit 10;
pk_char_keypart_1	pk_varchar_keypart_2	vector1	dis
doubles	ELEVEN	[51, 5, 5]	1490.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	1	1

IN list with LIKE clause
select *, fb_vector_l2(vector1, '[12.5, 3.5, 2.5]') as dis from t1 where pk_varchar_keypart_2 in ('one', 'five') or pk_char_keypart_1 = 'doubles' order by dis limit 10;
pk_char_keypart_1	pk_varchar_keypart_2	vector1	dis
singles	five	[5, 5, 5]	64.75
singles	one	[1, 1, 1]	140.75
doubles	TEN	[41, 4, 4]	814.75
doubles	ELEVEN	[51, 5, 5]	1490.75
doubles	TWELVE	[61, 6, 6]	2370.75

select TABLE_SCHEMA, TABLE_NAME, INDEX_NAME, INDEX_TYPE, 
MIN_LIST_SIZE, MAX_LIST_SIZE from information_schema.ROCKSDB_VECTOR_INDEX;
TABLE_SCHEMA	TABLE_NAME	INDEX_NAME	INDEX_TYPE	MIN_LIST_SIZE	MAX_LIST_SIZE
test	t1	vector_key_1	flat	5	5
drop table t1;
