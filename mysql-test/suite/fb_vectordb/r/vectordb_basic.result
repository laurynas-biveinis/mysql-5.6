
TEST CASE basic distance calculation

select FB_VECTOR_L2('[1, 2, 3]', '[1, 2, 3]') as v1;
v1
0
select FB_VECTOR_L2('[1, 2, 3]', '[2, 3, 5]') as v1, FB_VECTOR_L2('[1, 2, 3]', '[2]') as v2, FB_VECTOR_L2('[1]', '[2, 3, 5]') as v3;
v1	v2	v3
6	14	35
select FB_VECTOR_IP('[1, 2, 3]', '[1, 2, 3]') as v1;
v1
14
select FB_VECTOR_IP('[1, 2, 3]', '[2, 3, 5]') as v1;
v1
23
select FB_VECTOR_IP(FB_VECTOR_NORMALIZE_L2('[1, 2, 3]'), FB_VECTOR_NORMALIZE_L2('[1, 2, 3]')) as v1;
v1
0.9999998807907104
select FB_VECTOR_IP(FB_VECTOR_NORMALIZE_L2('[1, 2, 3]'), FB_VECTOR_NORMALIZE_L2('[2, 3, 5]')) as v1;
v1
0.9971764087677002
select FB_VECTOR_IP(FB_VECTOR_NORMALIZE_L2('[5, 0]'), FB_VECTOR_NORMALIZE_L2('[2, 0]')) v1, FB_VECTOR_IP(FB_VECTOR_NORMALIZE_L2('[5, 0]'), FB_VECTOR_NORMALIZE_L2('[0, 2]')) v2;
v1	v2
1	0
select FB_VECTOR_NORMALIZE_L2('[0, 0]') v1, FB_VECTOR_NORMALIZE_L2('[1, 2, 3]') v2, FB_VECTOR_NORMALIZE_L2('[1, 1, 1, 1]') v3;
v1	v2	v3
[0.0, 0.0]	[0.26726123690605164, 0.5345224738121033, 0.8017836809158325]	[0.5, 0.5, 0.5, 0.5]

TEST CASE basic error handling

select FB_VECTOR_L2('[1, 2, 3]', 'abc') as v1;
ERROR 22032: Invalid JSON text in argument 2 to function fb_vector_l2: "Invalid value." at position 0.
select FB_VECTOR_L2('[1, 2, "abc"]', '[1, 2, 3]') as v1;
ERROR HY000: Incorrect type for argument 0 in function fb_vector_l2.

TEST CASE distance function with column prameter

CREATE TABLE t1(c1 BIGINT PRIMARY KEY, c2 JSON);
insert into t1 (WITH RECURSIVE a(i) AS (SELECT 0 union all select i+1 from a where i < 64) SELECT i+10, json_array(i+10, i+11, i) from a);
select *, FB_VECTOR_L2(c2, '[20, 21, 10]') as dis from t1 order by dis limit 5;
c1	c2	dis
20	[20, 21, 10]	0
19	[19, 20, 9]	3
21	[21, 22, 11]	3
22	[22, 23, 12]	12
18	[18, 19, 8]	12
DROP TABLE t1;

vector column test cases

CREATE TABLE t1(c1 BIGINT PRIMARY KEY, c2 JSON NOT NULL FB_VECTOR_DIMENSION 4);
insert into t1 values(1, JSON_OBJECT('a', 1));
ERROR HY000: Invalid vector value.
insert into t1 values(1, '{}');
ERROR HY000: Invalid vector value.
insert into t1 values(1, json_array(1));
ERROR HY000: Invalid vector value.
insert into t1 values(1, '[1]');
ERROR HY000: Invalid vector value.
insert into t1 values(1, json_array(1, 2, 3, '4'));
ERROR HY000: Invalid vector value.
insert into t1 values(1, json_array(1, 2, 3, 4));
insert into t1 values(2, '[2,3,4,5]');
select * from t1;
c1	c2
1	[1, 2, 3, 4]
2	[2, 3, 4, 5]
DROP TABLE t1;

vector column definetion error case
vector column should not be nullable
CREATE TABLE t1(c1 BIGINT PRIMARY KEY, c2 JSON FB_VECTOR_DIMENSION 4);
ERROR HY000: Incorrect arguments to fb_vector column should not be nullable
vector column dimension should not exceed limits
CREATE TABLE t1(c1 BIGINT PRIMARY KEY, c2 JSON NOT NULL FB_VECTOR_DIMENSION 1);
ERROR HY000: Incorrect arguments to fb_vector_dimension out of configured bounds
CREATE TABLE t1(c1 BIGINT PRIMARY KEY, c2 JSON NOT NULL FB_VECTOR_DIMENSION 10240);
ERROR HY000: Incorrect arguments to fb_vector_dimension out of configured bounds
vector column should be json
CREATE TABLE t1(c1 BIGINT PRIMARY KEY, c2 BIGINT NOT NULL FB_VECTOR_DIMENSION 4);
ERROR HY000: Incorrect arguments to fb_vector only supports json type

blob and json convert functions
select HEX(FB_VECTOR_JSON_TO_BLOB('[1,2,3]'));
HEX(FB_VECTOR_JSON_TO_BLOB('[1,2,3]'))
0000803F0000004000004040
select HEX(FB_VECTOR_JSON_TO_BLOB(JSON_ARRAY(1,2,3)));
HEX(FB_VECTOR_JSON_TO_BLOB(JSON_ARRAY(1,2,3)))
0000803F0000004000004040
CREATE TABLE t1 (id BIGINT NOT NULL PRIMARY KEY,blob1 BLOB NOT NULL);
insert into t1 values(1, UNHEX('0000803F0000004000004040'));
select FB_VECTOR_BLOB_TO_JSON(blob1) from t1 where id=1;
FB_VECTOR_BLOB_TO_JSON(blob1)
[1.0, 2.0, 3.0]
insert into t1 values(2, UNHEX('0000803F00000040000040400'));
FB_VECTOR_BLOB_TO_JSON only accepts blob length multiple of sizeof(float)
select FB_VECTOR_BLOB_TO_JSON(blob1) from t1 where id=2;
ERROR HY000: Incorrect type for argument 0 in function fb_vector_blob_to_json.
DROP TABLE t1;
