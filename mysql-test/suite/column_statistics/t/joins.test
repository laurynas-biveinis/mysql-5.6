--disable_warnings
DROP TABLE IF EXISTS tbl1;
DROP TABLE IF EXISTS tbl2;
DROP TABLE IF EXISTS tbl3;
DROP DATABASE IF EXISTS cus_test;
CREATE DATABASE cus_test;
USE cus_test;
--enable_warnings

CREATE TABLE tbl1 (
  col1_1 INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  col1_2 INT NOT NULL,
  col1_3 INT NOT NULL,
  col1_4 INT NOT NULL);

INSERT INTO tbl1 (col1_2, col1_3, col1_4) VALUES (2, 3, 4);
INSERT INTO tbl1 (col1_2, col1_3, col1_4) VALUES (3, 4, 5);
INSERT INTO tbl1 (col1_2, col1_3, col1_4) VALUES (4, 5, 6);

CREATE TABLE tbl2 (col2_1 INT NOT NULL, col2_2 INT NOT NULL);
INSERT INTO tbl2 (col2_1, col2_2) VALUES (2, 3);

CREATE TABLE tbl3 (
  col1_1 INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  col1_2 INT NOT NULL,
  col3_3 INT NOT NULL);

INSERT INTO tbl3 (col1_2, col3_3) VALUES (2, 83);
INSERT INTO tbl3 (col1_2, col3_3) VALUES (3, 84);
INSERT INTO tbl3 (col1_2, col3_3) VALUES (4, 85);

set global column_stats_control = ON;

# performance_schema_esms_by_all is OFF by default.
# enable it to populate performance_schema.events_statements_summary_by_all
SET @start_value = @@global.performance_schema_esms_by_all;
SET @@global.performance_schema_esms_by_all = ON;

# Executing queries that would populate column_statistics

SELECT col1_1, col2_2 FROM tbl1 INNER JOIN tbl2 ON col1_2 = col2_2 WHERE col1_1 IN (1, 2, 3);

SELECT * FROM tbl1 NATURAL JOIN tbl3;

SELECT col1_1, col2_2 FROM tbl1 STRAIGHT_JOIN tbl2 ON col1_2 = col2_2;

SELECT * FROM tbl1 JOIN tbl3 USING (col1_2);

SELECT tbl1.col1_1, tbl2.col2_2 FROM tbl1, tbl2 WHERE tbl1.col1_2 IN (1, 2, 3);

SELECT tbl1.col1_1, tbl2.col2_2 FROM tbl1 JOIN tbl2 ON tbl1.col1_2 = col2_2 WHERE tbl1.col1_2 IN (1, 2, 3);

SELECT tbl1.col1_1, tbl2.col2_2 FROM tbl1 JOIN tbl2 ON tbl1.col1_2 > col2_2;

SELECT * FROM (tbl1, tbl2) JOIN tbl3 ON (tbl1.col1_1 = tbl3.col1_1);

SELECT tbl1.col1_1, col2_2 FROM tbl1, (SELECT * FROM tbl2 WHERE col2_2 = 3) t2 WHERE col2_1 = 2 AND col1_2 > 0;

SELECT tbl1.col1_1, t.col2_2 FROM tbl1 INNER JOIN (SELECT col2_1, col2_2 FROM tbl2 WHERE col2_1 > 0) t ON col1_2 = col2_2
WHERE tbl1.col1_2 IN (1,2,3) AND t.col2_2 <> 0;

SELECT t1.col1_1, t2.col2_2 AS c2 FROM tbl1 t1 JOIN tbl2 t2 ON t1.col1_2 > col2_2;

SELECT t1.col1_1, t2.col1_2 FROM tbl1 t1, tbl1 t2
WHERE t1.col1_1 = t2.col1_1 AND t1.col1_2 > 10 AND t2.col1_2 > 5;

SELECT t1.col1_1, t2.col1_2 FROM tbl1 t1, tbl1 t2
WHERE t1.col1_1 = t2.col1_1 AND t1.col1_2 > 10 AND t2.col1_2 <= 5;

# Verification of stats accumulated

SELECT COUNT(DISTINCT SQL_ID) FROM performance_schema.column_statistics;

--vertical_results
SELECT SQL_ID, DIGEST_TEXT, TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, SQL_OPERATION, OPERATOR_TYPE
FROM performance_schema.column_statistics cs, performance_schema.events_statements_summary_by_all mt
WHERE TABLE_SCHEMA <> 'performance_schema' AND cs.SQL_ID = mt.DIGEST
ORDER BY SQL_ID, DIGEST_TEXT, TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, SQL_OPERATION, OPERATOR_TYPE;


set global column_stats_control = OFF_HARD;

# set performance_schema_esms_by_all to original value
SET @@global.performance_schema_esms_by_all = @start_value;

DROP TABLE tbl1;
DROP TABLE tbl2;
DROP TABLE tbl3;
DROP DATABASE cus_test;
